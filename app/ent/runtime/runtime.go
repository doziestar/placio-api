// Code generated by ent, DO NOT EDIT.

package runtime

import (
	"placio-app/ent/accountsettings"
	"placio-app/ent/accountwallet"
	"placio-app/ent/amenity"
	"placio-app/ent/booking"
	"placio-app/ent/business"
	"placio-app/ent/businessfollowbusiness"
	"placio-app/ent/businessfollowevent"
	"placio-app/ent/businessfollowuser"
	"placio-app/ent/category"
	"placio-app/ent/comment"
	"placio-app/ent/event"
	"placio-app/ent/eventorganizer"
	"placio-app/ent/featurerelease"
	"placio-app/ent/fitness"
	"placio-app/ent/help"
	"placio-app/ent/inventoryattribute"
	"placio-app/ent/inventorytype"
	"placio-app/ent/like"
	"placio-app/ent/media"
	"placio-app/ent/menu"
	"placio-app/ent/menuitem"
	"placio-app/ent/notification"
	"placio-app/ent/order"
	"placio-app/ent/orderitem"
	"placio-app/ent/permission"
	"placio-app/ent/place"
	"placio-app/ent/placeinventory"
	"placio-app/ent/placeinventoryattribute"
	"placio-app/ent/placetable"
	"placio-app/ent/plan"
	"placio-app/ent/post"
	"placio-app/ent/price"
	"placio-app/ent/rating"
	"placio-app/ent/reservation"
	"placio-app/ent/review"
	"placio-app/ent/room"
	"placio-app/ent/roomcategory"
	"placio-app/ent/schema"
	"placio-app/ent/staff"
	"placio-app/ent/subscription"
	"placio-app/ent/ticket"
	"placio-app/ent/ticketoption"
	"placio-app/ent/trainer"
	"placio-app/ent/transactionhistory"
	"placio-app/ent/user"
	"placio-app/ent/userbusiness"
	"placio-app/ent/userfollowbusiness"
	"placio-app/ent/userfollowevent"
	"placio-app/ent/userfollowplace"
	"placio-app/ent/userfollowuser"
	"placio-app/ent/userlikeplace"
	"placio-app/ent/website"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	accountsettingsFields := schema.AccountSettings{}.Fields()
	_ = accountsettingsFields
	// accountsettingsDescID is the schema descriptor for id field.
	accountsettingsDescID := accountsettingsFields[0].Descriptor()
	// accountsettings.IDValidator is a validator for the "id" field. It is called by the builders before save.
	accountsettings.IDValidator = accountsettingsDescID.Validators[0].(func(string) error)
	accountwalletFields := schema.AccountWallet{}.Fields()
	_ = accountwalletFields
	// accountwalletDescBalance is the schema descriptor for balance field.
	accountwalletDescBalance := accountwalletFields[1].Descriptor()
	// accountwallet.DefaultBalance holds the default value on creation for the balance field.
	accountwallet.DefaultBalance = accountwalletDescBalance.Default.(float64)
	// accountwalletDescTotalDeposited is the schema descriptor for total_deposited field.
	accountwalletDescTotalDeposited := accountwalletFields[2].Descriptor()
	// accountwallet.DefaultTotalDeposited holds the default value on creation for the total_deposited field.
	accountwallet.DefaultTotalDeposited = accountwalletDescTotalDeposited.Default.(float64)
	// accountwalletDescTotalWithdrawn is the schema descriptor for total_withdrawn field.
	accountwalletDescTotalWithdrawn := accountwalletFields[3].Descriptor()
	// accountwallet.DefaultTotalWithdrawn holds the default value on creation for the total_withdrawn field.
	accountwallet.DefaultTotalWithdrawn = accountwalletDescTotalWithdrawn.Default.(float64)
	// accountwalletDescTotalEarned is the schema descriptor for total_earned field.
	accountwalletDescTotalEarned := accountwalletFields[4].Descriptor()
	// accountwallet.DefaultTotalEarned holds the default value on creation for the total_earned field.
	accountwallet.DefaultTotalEarned = accountwalletDescTotalEarned.Default.(float64)
	// accountwalletDescTotalSpent is the schema descriptor for total_spent field.
	accountwalletDescTotalSpent := accountwalletFields[5].Descriptor()
	// accountwallet.DefaultTotalSpent holds the default value on creation for the total_spent field.
	accountwallet.DefaultTotalSpent = accountwalletDescTotalSpent.Default.(float64)
	// accountwalletDescTotalRefunded is the schema descriptor for total_refunded field.
	accountwalletDescTotalRefunded := accountwalletFields[6].Descriptor()
	// accountwallet.DefaultTotalRefunded holds the default value on creation for the total_refunded field.
	accountwallet.DefaultTotalRefunded = accountwalletDescTotalRefunded.Default.(float64)
	// accountwalletDescTotalFees is the schema descriptor for total_fees field.
	accountwalletDescTotalFees := accountwalletFields[7].Descriptor()
	// accountwallet.DefaultTotalFees holds the default value on creation for the total_fees field.
	accountwallet.DefaultTotalFees = accountwalletDescTotalFees.Default.(float64)
	// accountwalletDescTotalTax is the schema descriptor for total_tax field.
	accountwalletDescTotalTax := accountwalletFields[8].Descriptor()
	// accountwallet.DefaultTotalTax holds the default value on creation for the total_tax field.
	accountwallet.DefaultTotalTax = accountwalletDescTotalTax.Default.(float64)
	// accountwalletDescTotalDiscount is the schema descriptor for total_discount field.
	accountwalletDescTotalDiscount := accountwalletFields[9].Descriptor()
	// accountwallet.DefaultTotalDiscount holds the default value on creation for the total_discount field.
	accountwallet.DefaultTotalDiscount = accountwalletDescTotalDiscount.Default.(float64)
	// accountwalletDescTotalRevenue is the schema descriptor for total_revenue field.
	accountwalletDescTotalRevenue := accountwalletFields[10].Descriptor()
	// accountwallet.DefaultTotalRevenue holds the default value on creation for the total_revenue field.
	accountwallet.DefaultTotalRevenue = accountwalletDescTotalRevenue.Default.(float64)
	// accountwalletDescTotalExpenses is the schema descriptor for total_expenses field.
	accountwalletDescTotalExpenses := accountwalletFields[11].Descriptor()
	// accountwallet.DefaultTotalExpenses holds the default value on creation for the total_expenses field.
	accountwallet.DefaultTotalExpenses = accountwalletDescTotalExpenses.Default.(float64)
	// accountwalletDescTotalProfit is the schema descriptor for total_profit field.
	accountwalletDescTotalProfit := accountwalletFields[12].Descriptor()
	// accountwallet.DefaultTotalProfit holds the default value on creation for the total_profit field.
	accountwallet.DefaultTotalProfit = accountwalletDescTotalProfit.Default.(float64)
	// accountwalletDescTotalLoss is the schema descriptor for total_loss field.
	accountwalletDescTotalLoss := accountwalletFields[13].Descriptor()
	// accountwallet.DefaultTotalLoss holds the default value on creation for the total_loss field.
	accountwallet.DefaultTotalLoss = accountwalletDescTotalLoss.Default.(float64)
	amenityFields := schema.Amenity{}.Fields()
	_ = amenityFields
	// amenityDescID is the schema descriptor for id field.
	amenityDescID := amenityFields[0].Descriptor()
	// amenity.IDValidator is a validator for the "id" field. It is called by the builders before save.
	amenity.IDValidator = amenityDescID.Validators[0].(func(string) error)
	bookingFields := schema.Booking{}.Fields()
	_ = bookingFields
	// bookingDescID is the schema descriptor for id field.
	bookingDescID := bookingFields[0].Descriptor()
	// booking.IDValidator is a validator for the "id" field. It is called by the builders before save.
	booking.IDValidator = bookingDescID.Validators[0].(func(string) error)
	businessHooks := schema.Business{}.Hooks()
	business.Hooks[0] = businessHooks[0]
	businessFields := schema.Business{}.Fields()
	_ = businessFields
	// businessDescCoverImage is the schema descriptor for cover_image field.
	businessDescCoverImage := businessFields[4].Descriptor()
	// business.DefaultCoverImage holds the default value on creation for the cover_image field.
	business.DefaultCoverImage = businessDescCoverImage.Default.(string)
	// businessDescFollowerCount is the schema descriptor for follower_count field.
	businessDescFollowerCount := businessFields[16].Descriptor()
	// business.DefaultFollowerCount holds the default value on creation for the follower_count field.
	business.DefaultFollowerCount = businessDescFollowerCount.Default.(int)
	// businessDescFollowingCount is the schema descriptor for following_count field.
	businessDescFollowingCount := businessFields[17].Descriptor()
	// business.DefaultFollowingCount holds the default value on creation for the following_count field.
	business.DefaultFollowingCount = businessDescFollowingCount.Default.(int)
	// businessDescID is the schema descriptor for id field.
	businessDescID := businessFields[0].Descriptor()
	// business.IDValidator is a validator for the "id" field. It is called by the builders before save.
	business.IDValidator = businessDescID.Validators[0].(func(string) error)
	businessfollowbusinessFields := schema.BusinessFollowBusiness{}.Fields()
	_ = businessfollowbusinessFields
	// businessfollowbusinessDescCreatedAt is the schema descriptor for CreatedAt field.
	businessfollowbusinessDescCreatedAt := businessfollowbusinessFields[1].Descriptor()
	// businessfollowbusiness.DefaultCreatedAt holds the default value on creation for the CreatedAt field.
	businessfollowbusiness.DefaultCreatedAt = businessfollowbusinessDescCreatedAt.Default.(func() time.Time)
	// businessfollowbusinessDescUpdatedAt is the schema descriptor for UpdatedAt field.
	businessfollowbusinessDescUpdatedAt := businessfollowbusinessFields[2].Descriptor()
	// businessfollowbusiness.UpdateDefaultUpdatedAt holds the default value on update for the UpdatedAt field.
	businessfollowbusiness.UpdateDefaultUpdatedAt = businessfollowbusinessDescUpdatedAt.UpdateDefault.(func() time.Time)
	businessfolloweventFields := schema.BusinessFollowEvent{}.Fields()
	_ = businessfolloweventFields
	// businessfolloweventDescCreatedAt is the schema descriptor for createdAt field.
	businessfolloweventDescCreatedAt := businessfolloweventFields[1].Descriptor()
	// businessfollowevent.DefaultCreatedAt holds the default value on creation for the createdAt field.
	businessfollowevent.DefaultCreatedAt = businessfolloweventDescCreatedAt.Default.(func() time.Time)
	// businessfolloweventDescUpdatedAt is the schema descriptor for updatedAt field.
	businessfolloweventDescUpdatedAt := businessfolloweventFields[2].Descriptor()
	// businessfollowevent.DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	businessfollowevent.DefaultUpdatedAt = businessfolloweventDescUpdatedAt.Default.(func() time.Time)
	// businessfollowevent.UpdateDefaultUpdatedAt holds the default value on update for the updatedAt field.
	businessfollowevent.UpdateDefaultUpdatedAt = businessfolloweventDescUpdatedAt.UpdateDefault.(func() time.Time)
	businessfollowuserFields := schema.BusinessFollowUser{}.Fields()
	_ = businessfollowuserFields
	// businessfollowuserDescCreatedAt is the schema descriptor for CreatedAt field.
	businessfollowuserDescCreatedAt := businessfollowuserFields[1].Descriptor()
	// businessfollowuser.DefaultCreatedAt holds the default value on creation for the CreatedAt field.
	businessfollowuser.DefaultCreatedAt = businessfollowuserDescCreatedAt.Default.(func() time.Time)
	// businessfollowuserDescUpdatedAt is the schema descriptor for UpdatedAt field.
	businessfollowuserDescUpdatedAt := businessfollowuserFields[2].Descriptor()
	// businessfollowuser.UpdateDefaultUpdatedAt holds the default value on update for the UpdatedAt field.
	businessfollowuser.UpdateDefaultUpdatedAt = businessfollowuserDescUpdatedAt.UpdateDefault.(func() time.Time)
	categoryFields := schema.Category{}.Fields()
	_ = categoryFields
	// categoryDescID is the schema descriptor for id field.
	categoryDescID := categoryFields[0].Descriptor()
	// category.IDValidator is a validator for the "id" field. It is called by the builders before save.
	category.IDValidator = categoryDescID.Validators[0].(func(string) error)
	commentFields := schema.Comment{}.Fields()
	_ = commentFields
	// commentDescContent is the schema descriptor for Content field.
	commentDescContent := commentFields[1].Descriptor()
	// comment.ContentValidator is a validator for the "Content" field. It is called by the builders before save.
	comment.ContentValidator = commentDescContent.Validators[0].(func(string) error)
	// commentDescCreatedAt is the schema descriptor for CreatedAt field.
	commentDescCreatedAt := commentFields[2].Descriptor()
	// comment.DefaultCreatedAt holds the default value on creation for the CreatedAt field.
	comment.DefaultCreatedAt = commentDescCreatedAt.Default.(func() time.Time)
	// commentDescUpdatedAt is the schema descriptor for UpdatedAt field.
	commentDescUpdatedAt := commentFields[3].Descriptor()
	// comment.UpdateDefaultUpdatedAt holds the default value on update for the UpdatedAt field.
	comment.UpdateDefaultUpdatedAt = commentDescUpdatedAt.UpdateDefault.(func() time.Time)
	// commentDescID is the schema descriptor for id field.
	commentDescID := commentFields[0].Descriptor()
	// comment.IDValidator is a validator for the "id" field. It is called by the builders before save.
	comment.IDValidator = commentDescID.Validators[0].(func(string) error)
	eventHooks := schema.Event{}.Hooks()
	event.Hooks[0] = eventHooks[0]
	eventFields := schema.Event{}.Fields()
	_ = eventFields
	// eventDescCoverImage is the schema descriptor for cover_image field.
	eventDescCoverImage := eventFields[32].Descriptor()
	// event.DefaultCoverImage holds the default value on creation for the cover_image field.
	event.DefaultCoverImage = eventDescCoverImage.Default.(string)
	// eventDescCreatedAt is the schema descriptor for createdAt field.
	eventDescCreatedAt := eventFields[33].Descriptor()
	// event.DefaultCreatedAt holds the default value on creation for the createdAt field.
	event.DefaultCreatedAt = eventDescCreatedAt.Default.(func() time.Time)
	// eventDescUpdatedAt is the schema descriptor for updatedAt field.
	eventDescUpdatedAt := eventFields[34].Descriptor()
	// event.DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	event.DefaultUpdatedAt = eventDescUpdatedAt.Default.(func() time.Time)
	// event.UpdateDefaultUpdatedAt holds the default value on update for the updatedAt field.
	event.UpdateDefaultUpdatedAt = eventDescUpdatedAt.UpdateDefault.(func() time.Time)
	// eventDescFollowerCount is the schema descriptor for follower_count field.
	eventDescFollowerCount := eventFields[40].Descriptor()
	// event.DefaultFollowerCount holds the default value on creation for the follower_count field.
	event.DefaultFollowerCount = eventDescFollowerCount.Default.(int)
	// eventDescFollowingCount is the schema descriptor for following_count field.
	eventDescFollowingCount := eventFields[41].Descriptor()
	// event.DefaultFollowingCount holds the default value on creation for the following_count field.
	event.DefaultFollowingCount = eventDescFollowingCount.Default.(int)
	// eventDescIsPremium is the schema descriptor for is_Premium field.
	eventDescIsPremium := eventFields[42].Descriptor()
	// event.DefaultIsPremium holds the default value on creation for the is_Premium field.
	event.DefaultIsPremium = eventDescIsPremium.Default.(bool)
	// eventDescIsPublished is the schema descriptor for is_published field.
	eventDescIsPublished := eventFields[43].Descriptor()
	// event.DefaultIsPublished holds the default value on creation for the is_published field.
	event.DefaultIsPublished = eventDescIsPublished.Default.(bool)
	// eventDescIsOnline is the schema descriptor for is_Online field.
	eventDescIsOnline := eventFields[44].Descriptor()
	// event.DefaultIsOnline holds the default value on creation for the is_Online field.
	event.DefaultIsOnline = eventDescIsOnline.Default.(bool)
	// eventDescIsCancelled is the schema descriptor for is_cancelled field.
	eventDescIsCancelled := eventFields[45].Descriptor()
	// event.DefaultIsCancelled holds the default value on creation for the is_cancelled field.
	event.DefaultIsCancelled = eventDescIsCancelled.Default.(bool)
	// eventDescIsActive is the schema descriptor for is_Active field.
	eventDescIsActive := eventFields[46].Descriptor()
	// event.DefaultIsActive holds the default value on creation for the is_Active field.
	event.DefaultIsActive = eventDescIsActive.Default.(bool)
	// eventDescIsFree is the schema descriptor for is_Free field.
	eventDescIsFree := eventFields[47].Descriptor()
	// event.DefaultIsFree holds the default value on creation for the is_Free field.
	event.DefaultIsFree = eventDescIsFree.Default.(bool)
	// eventDescIsPaid is the schema descriptor for is_Paid field.
	eventDescIsPaid := eventFields[48].Descriptor()
	// event.DefaultIsPaid holds the default value on creation for the is_Paid field.
	event.DefaultIsPaid = eventDescIsPaid.Default.(bool)
	// eventDescIsPublic is the schema descriptor for is_public field.
	eventDescIsPublic := eventFields[49].Descriptor()
	// event.DefaultIsPublic holds the default value on creation for the is_public field.
	event.DefaultIsPublic = eventDescIsPublic.Default.(bool)
	// eventDescIsOnlineOnly is the schema descriptor for is_Online_Only field.
	eventDescIsOnlineOnly := eventFields[50].Descriptor()
	// event.DefaultIsOnlineOnly holds the default value on creation for the is_Online_Only field.
	event.DefaultIsOnlineOnly = eventDescIsOnlineOnly.Default.(bool)
	// eventDescIsInPersonOnly is the schema descriptor for is_In_Person_Only field.
	eventDescIsInPersonOnly := eventFields[51].Descriptor()
	// event.DefaultIsInPersonOnly holds the default value on creation for the is_In_Person_Only field.
	event.DefaultIsInPersonOnly = eventDescIsInPersonOnly.Default.(bool)
	// eventDescIsHybrid is the schema descriptor for is_Hybrid field.
	eventDescIsHybrid := eventFields[52].Descriptor()
	// event.DefaultIsHybrid holds the default value on creation for the is_Hybrid field.
	event.DefaultIsHybrid = eventDescIsHybrid.Default.(bool)
	// eventDescIsOnlineAndInPerson is the schema descriptor for is_Online_And_In_Person field.
	eventDescIsOnlineAndInPerson := eventFields[53].Descriptor()
	// event.DefaultIsOnlineAndInPerson holds the default value on creation for the is_Online_And_In_Person field.
	event.DefaultIsOnlineAndInPerson = eventDescIsOnlineAndInPerson.Default.(bool)
	// eventDescIsOnlineAndInPersonOnly is the schema descriptor for is_Online_And_In_Person_Only field.
	eventDescIsOnlineAndInPersonOnly := eventFields[54].Descriptor()
	// event.DefaultIsOnlineAndInPersonOnly holds the default value on creation for the is_Online_And_In_Person_Only field.
	event.DefaultIsOnlineAndInPersonOnly = eventDescIsOnlineAndInPersonOnly.Default.(bool)
	// eventDescIsOnlineAndInPersonOrHybrid is the schema descriptor for is_Online_And_In_Person_Or_Hybrid field.
	eventDescIsOnlineAndInPersonOrHybrid := eventFields[55].Descriptor()
	// event.DefaultIsOnlineAndInPersonOrHybrid holds the default value on creation for the is_Online_And_In_Person_Or_Hybrid field.
	event.DefaultIsOnlineAndInPersonOrHybrid = eventDescIsOnlineAndInPersonOrHybrid.Default.(bool)
	// eventDescLikedByCurrentUser is the schema descriptor for likedByCurrentUser field.
	eventDescLikedByCurrentUser := eventFields[56].Descriptor()
	// event.DefaultLikedByCurrentUser holds the default value on creation for the likedByCurrentUser field.
	event.DefaultLikedByCurrentUser = eventDescLikedByCurrentUser.Default.(bool)
	// eventDescFollowedByCurrentUser is the schema descriptor for followedByCurrentUser field.
	eventDescFollowedByCurrentUser := eventFields[57].Descriptor()
	// event.DefaultFollowedByCurrentUser holds the default value on creation for the followedByCurrentUser field.
	event.DefaultFollowedByCurrentUser = eventDescFollowedByCurrentUser.Default.(bool)
	// eventDescIsPhysicallyAccessible is the schema descriptor for is_physically_accessible field.
	eventDescIsPhysicallyAccessible := eventFields[60].Descriptor()
	// event.DefaultIsPhysicallyAccessible holds the default value on creation for the is_physically_accessible field.
	event.DefaultIsPhysicallyAccessible = eventDescIsPhysicallyAccessible.Default.(bool)
	// eventDescIsVirtuallyAccessible is the schema descriptor for is_virtually_accessible field.
	eventDescIsVirtuallyAccessible := eventFields[62].Descriptor()
	// event.DefaultIsVirtuallyAccessible holds the default value on creation for the is_virtually_accessible field.
	event.DefaultIsVirtuallyAccessible = eventDescIsVirtuallyAccessible.Default.(bool)
	eventorganizerFields := schema.EventOrganizer{}.Fields()
	_ = eventorganizerFields
	// eventorganizerDescOrganizerID is the schema descriptor for organizerID field.
	eventorganizerDescOrganizerID := eventorganizerFields[1].Descriptor()
	// eventorganizer.OrganizerIDValidator is a validator for the "organizerID" field. It is called by the builders before save.
	eventorganizer.OrganizerIDValidator = eventorganizerDescOrganizerID.Validators[0].(func(string) error)
	// eventorganizerDescOrganizerType is the schema descriptor for organizerType field.
	eventorganizerDescOrganizerType := eventorganizerFields[2].Descriptor()
	// eventorganizer.OrganizerTypeValidator is a validator for the "organizerType" field. It is called by the builders before save.
	eventorganizer.OrganizerTypeValidator = func() func(string) error {
		validators := eventorganizerDescOrganizerType.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(organizerType string) error {
			for _, fn := range fns {
				if err := fn(organizerType); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	featurereleaseFields := schema.FeatureRelease{}.Fields()
	_ = featurereleaseFields
	// featurereleaseDescReleaseDate is the schema descriptor for release_date field.
	featurereleaseDescReleaseDate := featurereleaseFields[4].Descriptor()
	// featurerelease.DefaultReleaseDate holds the default value on creation for the release_date field.
	featurerelease.DefaultReleaseDate = featurereleaseDescReleaseDate.Default.(func() time.Time)
	// featurereleaseDescID is the schema descriptor for id field.
	featurereleaseDescID := featurereleaseFields[0].Descriptor()
	// featurerelease.IDValidator is a validator for the "id" field. It is called by the builders before save.
	featurerelease.IDValidator = featurereleaseDescID.Validators[0].(func(string) error)
	fitnessFields := schema.Fitness{}.Fields()
	_ = fitnessFields
	// fitnessDescID is the schema descriptor for id field.
	fitnessDescID := fitnessFields[0].Descriptor()
	// fitness.IDValidator is a validator for the "id" field. It is called by the builders before save.
	fitness.IDValidator = fitnessDescID.Validators[0].(func(string) error)
	helpFields := schema.Help{}.Fields()
	_ = helpFields
	// helpDescStatus is the schema descriptor for status field.
	helpDescStatus := helpFields[5].Descriptor()
	// help.DefaultStatus holds the default value on creation for the status field.
	help.DefaultStatus = helpDescStatus.Default.(string)
	// helpDescUserID is the schema descriptor for user_id field.
	helpDescUserID := helpFields[6].Descriptor()
	// help.UserIDValidator is a validator for the "user_id" field. It is called by the builders before save.
	help.UserIDValidator = helpDescUserID.Validators[0].(func(string) error)
	inventoryattributeFields := schema.InventoryAttribute{}.Fields()
	_ = inventoryattributeFields
	// inventoryattributeDescIsMandatory is the schema descriptor for is_mandatory field.
	inventoryattributeDescIsMandatory := inventoryattributeFields[4].Descriptor()
	// inventoryattribute.DefaultIsMandatory holds the default value on creation for the is_mandatory field.
	inventoryattribute.DefaultIsMandatory = inventoryattributeDescIsMandatory.Default.(bool)
	// inventoryattributeDescID is the schema descriptor for id field.
	inventoryattributeDescID := inventoryattributeFields[0].Descriptor()
	// inventoryattribute.IDValidator is a validator for the "id" field. It is called by the builders before save.
	inventoryattribute.IDValidator = inventoryattributeDescID.Validators[0].(func(string) error)
	inventorytypeFields := schema.InventoryType{}.Fields()
	_ = inventorytypeFields
	// inventorytypeDescID is the schema descriptor for id field.
	inventorytypeDescID := inventorytypeFields[0].Descriptor()
	// inventorytype.IDValidator is a validator for the "id" field. It is called by the builders before save.
	inventorytype.IDValidator = inventorytypeDescID.Validators[0].(func(string) error)
	likeFields := schema.Like{}.Fields()
	_ = likeFields
	// likeDescCreatedAt is the schema descriptor for createdAt field.
	likeDescCreatedAt := likeFields[1].Descriptor()
	// like.DefaultCreatedAt holds the default value on creation for the createdAt field.
	like.DefaultCreatedAt = likeDescCreatedAt.Default.(func() time.Time)
	// likeDescUpdatedAt is the schema descriptor for updatedAt field.
	likeDescUpdatedAt := likeFields[2].Descriptor()
	// like.UpdateDefaultUpdatedAt holds the default value on update for the updatedAt field.
	like.UpdateDefaultUpdatedAt = likeDescUpdatedAt.UpdateDefault.(func() time.Time)
	// likeDescID is the schema descriptor for id field.
	likeDescID := likeFields[0].Descriptor()
	// like.IDValidator is a validator for the "id" field. It is called by the builders before save.
	like.IDValidator = likeDescID.Validators[0].(func(string) error)
	mediaFields := schema.Media{}.Fields()
	_ = mediaFields
	// mediaDescCreatedAt is the schema descriptor for CreatedAt field.
	mediaDescCreatedAt := mediaFields[3].Descriptor()
	// media.DefaultCreatedAt holds the default value on creation for the CreatedAt field.
	media.DefaultCreatedAt = mediaDescCreatedAt.Default.(func() time.Time)
	// mediaDescUpdatedAt is the schema descriptor for UpdatedAt field.
	mediaDescUpdatedAt := mediaFields[4].Descriptor()
	// media.DefaultUpdatedAt holds the default value on creation for the UpdatedAt field.
	media.DefaultUpdatedAt = mediaDescUpdatedAt.Default.(func() time.Time)
	// media.UpdateDefaultUpdatedAt holds the default value on update for the UpdatedAt field.
	media.UpdateDefaultUpdatedAt = mediaDescUpdatedAt.UpdateDefault.(func() time.Time)
	// mediaDescLikeCount is the schema descriptor for likeCount field.
	mediaDescLikeCount := mediaFields[5].Descriptor()
	// media.DefaultLikeCount holds the default value on creation for the likeCount field.
	media.DefaultLikeCount = mediaDescLikeCount.Default.(int)
	// mediaDescDislikeCount is the schema descriptor for dislikeCount field.
	mediaDescDislikeCount := mediaFields[6].Descriptor()
	// media.DefaultDislikeCount holds the default value on creation for the dislikeCount field.
	media.DefaultDislikeCount = mediaDescDislikeCount.Default.(int)
	// mediaDescID is the schema descriptor for id field.
	mediaDescID := mediaFields[0].Descriptor()
	// media.IDValidator is a validator for the "id" field. It is called by the builders before save.
	media.IDValidator = mediaDescID.Validators[0].(func(string) error)
	menuFields := schema.Menu{}.Fields()
	_ = menuFields
	// menuDescIsDeleted is the schema descriptor for is_deleted field.
	menuDescIsDeleted := menuFields[3].Descriptor()
	// menu.DefaultIsDeleted holds the default value on creation for the is_deleted field.
	menu.DefaultIsDeleted = menuDescIsDeleted.Default.(bool)
	// menuDescIsAvailable is the schema descriptor for is_available field.
	menuDescIsAvailable := menuFields[10].Descriptor()
	// menu.DefaultIsAvailable holds the default value on creation for the is_available field.
	menu.DefaultIsAvailable = menuDescIsAvailable.Default.(bool)
	// menuDescUpdatedAt is the schema descriptor for updated_at field.
	menuDescUpdatedAt := menuFields[11].Descriptor()
	// menu.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	menu.DefaultUpdatedAt = menuDescUpdatedAt.Default.(time.Time)
	// menuDescID is the schema descriptor for id field.
	menuDescID := menuFields[0].Descriptor()
	// menu.IDValidator is a validator for the "id" field. It is called by the builders before save.
	menu.IDValidator = menuDescID.Validators[0].(func(string) error)
	menuitemFields := schema.MenuItem{}.Fields()
	_ = menuitemFields
	// menuitemDescIsAvailable is the schema descriptor for is_available field.
	menuitemDescIsAvailable := menuitemFields[5].Descriptor()
	// menuitem.DefaultIsAvailable holds the default value on creation for the is_available field.
	menuitem.DefaultIsAvailable = menuitemDescIsAvailable.Default.(bool)
	// menuitemDescIsDeleted is the schema descriptor for is_deleted field.
	menuitemDescIsDeleted := menuitemFields[13].Descriptor()
	// menuitem.DefaultIsDeleted holds the default value on creation for the is_deleted field.
	menuitem.DefaultIsDeleted = menuitemDescIsDeleted.Default.(bool)
	// menuitemDescIsFeatured is the schema descriptor for is_featured field.
	menuitemDescIsFeatured := menuitemFields[27].Descriptor()
	// menuitem.DefaultIsFeatured holds the default value on creation for the is_featured field.
	menuitem.DefaultIsFeatured = menuitemDescIsFeatured.Default.(bool)
	// menuitemDescIsNew is the schema descriptor for is_new field.
	menuitemDescIsNew := menuitemFields[28].Descriptor()
	// menuitem.DefaultIsNew holds the default value on creation for the is_new field.
	menuitem.DefaultIsNew = menuitemDescIsNew.Default.(bool)
	// menuitemDescIsSeasonal is the schema descriptor for is_seasonal field.
	menuitemDescIsSeasonal := menuitemFields[29].Descriptor()
	// menuitem.DefaultIsSeasonal holds the default value on creation for the is_seasonal field.
	menuitem.DefaultIsSeasonal = menuitemDescIsSeasonal.Default.(bool)
	// menuitemDescID is the schema descriptor for id field.
	menuitemDescID := menuitemFields[0].Descriptor()
	// menuitem.IDValidator is a validator for the "id" field. It is called by the builders before save.
	menuitem.IDValidator = menuitemDescID.Validators[0].(func(string) error)
	notificationFields := schema.Notification{}.Fields()
	_ = notificationFields
	// notificationDescTitle is the schema descriptor for title field.
	notificationDescTitle := notificationFields[1].Descriptor()
	// notification.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	notification.TitleValidator = notificationDescTitle.Validators[0].(func(string) error)
	// notificationDescMessage is the schema descriptor for message field.
	notificationDescMessage := notificationFields[2].Descriptor()
	// notification.MessageValidator is a validator for the "message" field. It is called by the builders before save.
	notification.MessageValidator = notificationDescMessage.Validators[0].(func(string) error)
	// notificationDescLink is the schema descriptor for link field.
	notificationDescLink := notificationFields[3].Descriptor()
	// notification.LinkValidator is a validator for the "link" field. It is called by the builders before save.
	notification.LinkValidator = notificationDescLink.Validators[0].(func(string) error)
	// notificationDescIsRead is the schema descriptor for is_read field.
	notificationDescIsRead := notificationFields[4].Descriptor()
	// notification.DefaultIsRead holds the default value on creation for the is_read field.
	notification.DefaultIsRead = notificationDescIsRead.Default.(bool)
	// notificationDescType is the schema descriptor for type field.
	notificationDescType := notificationFields[5].Descriptor()
	// notification.DefaultType holds the default value on creation for the type field.
	notification.DefaultType = notificationDescType.Default.(int)
	// notificationDescUnreadCount is the schema descriptor for unread_count field.
	notificationDescUnreadCount := notificationFields[6].Descriptor()
	// notification.DefaultUnreadCount holds the default value on creation for the unread_count field.
	notification.DefaultUnreadCount = notificationDescUnreadCount.Default.(int)
	// notificationDescNotifiableType is the schema descriptor for notifiable_type field.
	notificationDescNotifiableType := notificationFields[9].Descriptor()
	// notification.NotifiableTypeValidator is a validator for the "notifiable_type" field. It is called by the builders before save.
	notification.NotifiableTypeValidator = notificationDescNotifiableType.Validators[0].(func(string) error)
	// notificationDescNotifiableID is the schema descriptor for notifiable_id field.
	notificationDescNotifiableID := notificationFields[10].Descriptor()
	// notification.NotifiableIDValidator is a validator for the "notifiable_id" field. It is called by the builders before save.
	notification.NotifiableIDValidator = notificationDescNotifiableID.Validators[0].(func(string) error)
	// notificationDescTriggeredBy is the schema descriptor for triggered_by field.
	notificationDescTriggeredBy := notificationFields[11].Descriptor()
	// notification.TriggeredByValidator is a validator for the "triggered_by" field. It is called by the builders before save.
	notification.TriggeredByValidator = notificationDescTriggeredBy.Validators[0].(func(string) error)
	// notificationDescTriggeredTo is the schema descriptor for triggered_to field.
	notificationDescTriggeredTo := notificationFields[12].Descriptor()
	// notification.TriggeredToValidator is a validator for the "triggered_to" field. It is called by the builders before save.
	notification.TriggeredToValidator = notificationDescTriggeredTo.Validators[0].(func(string) error)
	// notificationDescID is the schema descriptor for id field.
	notificationDescID := notificationFields[0].Descriptor()
	// notification.IDValidator is a validator for the "id" field. It is called by the builders before save.
	notification.IDValidator = notificationDescID.Validators[0].(func(string) error)
	orderFields := schema.Order{}.Fields()
	_ = orderFields
	// orderDescCreatedAt is the schema descriptor for created_at field.
	orderDescCreatedAt := orderFields[1].Descriptor()
	// order.DefaultCreatedAt holds the default value on creation for the created_at field.
	order.DefaultCreatedAt = orderDescCreatedAt.Default.(func() time.Time)
	// orderDescUpdatedAt is the schema descriptor for updated_at field.
	orderDescUpdatedAt := orderFields[2].Descriptor()
	// order.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	order.DefaultUpdatedAt = orderDescUpdatedAt.Default.(func() time.Time)
	// order.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	order.UpdateDefaultUpdatedAt = orderDescUpdatedAt.UpdateDefault.(func() time.Time)
	// orderDescIsDeleted is the schema descriptor for is_deleted field.
	orderDescIsDeleted := orderFields[7].Descriptor()
	// order.DefaultIsDeleted holds the default value on creation for the is_deleted field.
	order.DefaultIsDeleted = orderDescIsDeleted.Default.(bool)
	// orderDescID is the schema descriptor for id field.
	orderDescID := orderFields[0].Descriptor()
	// order.IDValidator is a validator for the "id" field. It is called by the builders before save.
	order.IDValidator = orderDescID.Validators[0].(func(string) error)
	orderitemFields := schema.OrderItem{}.Fields()
	_ = orderitemFields
	// orderitemDescQuantity is the schema descriptor for quantity field.
	orderitemDescQuantity := orderitemFields[1].Descriptor()
	// orderitem.DefaultQuantity holds the default value on creation for the quantity field.
	orderitem.DefaultQuantity = orderitemDescQuantity.Default.(int)
	// orderitemDescID is the schema descriptor for id field.
	orderitemDescID := orderitemFields[0].Descriptor()
	// orderitem.IDValidator is a validator for the "id" field. It is called by the builders before save.
	orderitem.IDValidator = orderitemDescID.Validators[0].(func(string) error)
	permissionFields := schema.Permission{}.Fields()
	_ = permissionFields
	// permissionDescID is the schema descriptor for id field.
	permissionDescID := permissionFields[0].Descriptor()
	// permission.IDValidator is a validator for the "id" field. It is called by the builders before save.
	permission.IDValidator = permissionDescID.Validators[0].(func(string) error)
	placeHooks := schema.Place{}.Hooks()
	place.Hooks[0] = placeHooks[0]
	placeFields := schema.Place{}.Fields()
	_ = placeFields
	// placeDescCoverImage is the schema descriptor for cover_image field.
	placeDescCoverImage := placeFields[8].Descriptor()
	// place.DefaultCoverImage holds the default value on creation for the cover_image field.
	place.DefaultCoverImage = placeDescCoverImage.Default.(string)
	// placeDescFollowerCount is the schema descriptor for follower_count field.
	placeDescFollowerCount := placeFields[29].Descriptor()
	// place.DefaultFollowerCount holds the default value on creation for the follower_count field.
	place.DefaultFollowerCount = placeDescFollowerCount.Default.(int)
	// placeDescLikeCount is the schema descriptor for like_count field.
	placeDescLikeCount := placeFields[30].Descriptor()
	// place.DefaultLikeCount holds the default value on creation for the like_count field.
	place.DefaultLikeCount = placeDescLikeCount.Default.(int)
	// placeDescReviewCount is the schema descriptor for review_count field.
	placeDescReviewCount := placeFields[31].Descriptor()
	// place.DefaultReviewCount holds the default value on creation for the review_count field.
	place.DefaultReviewCount = placeDescReviewCount.Default.(int)
	// placeDescFollowingCount is the schema descriptor for following_count field.
	placeDescFollowingCount := placeFields[32].Descriptor()
	// place.DefaultFollowingCount holds the default value on creation for the following_count field.
	place.DefaultFollowingCount = placeDescFollowingCount.Default.(int)
	// placeDescIsPremium is the schema descriptor for is_Premium field.
	placeDescIsPremium := placeFields[33].Descriptor()
	// place.DefaultIsPremium holds the default value on creation for the is_Premium field.
	place.DefaultIsPremium = placeDescIsPremium.Default.(bool)
	// placeDescIsPublished is the schema descriptor for is_published field.
	placeDescIsPublished := placeFields[34].Descriptor()
	// place.DefaultIsPublished holds the default value on creation for the is_published field.
	place.DefaultIsPublished = placeDescIsPublished.Default.(bool)
	// placeDescLikedByCurrentUser is the schema descriptor for likedByCurrentUser field.
	placeDescLikedByCurrentUser := placeFields[35].Descriptor()
	// place.DefaultLikedByCurrentUser holds the default value on creation for the likedByCurrentUser field.
	place.DefaultLikedByCurrentUser = placeDescLikedByCurrentUser.Default.(bool)
	// placeDescFollowedByCurrentUser is the schema descriptor for followedByCurrentUser field.
	placeDescFollowedByCurrentUser := placeFields[36].Descriptor()
	// place.DefaultFollowedByCurrentUser holds the default value on creation for the followedByCurrentUser field.
	place.DefaultFollowedByCurrentUser = placeDescFollowedByCurrentUser.Default.(bool)
	// placeDescID is the schema descriptor for id field.
	placeDescID := placeFields[0].Descriptor()
	// place.IDValidator is a validator for the "id" field. It is called by the builders before save.
	place.IDValidator = placeDescID.Validators[0].(func(string) error)
	placeinventoryFields := schema.PlaceInventory{}.Fields()
	_ = placeinventoryFields
	// placeinventoryDescLastUpdated is the schema descriptor for last_updated field.
	placeinventoryDescLastUpdated := placeinventoryFields[11].Descriptor()
	// placeinventory.DefaultLastUpdated holds the default value on creation for the last_updated field.
	placeinventory.DefaultLastUpdated = placeinventoryDescLastUpdated.Default.(func() time.Time)
	// placeinventoryDescID is the schema descriptor for id field.
	placeinventoryDescID := placeinventoryFields[0].Descriptor()
	// placeinventory.IDValidator is a validator for the "id" field. It is called by the builders before save.
	placeinventory.IDValidator = placeinventoryDescID.Validators[0].(func(string) error)
	placeinventoryattributeFields := schema.PlaceInventoryAttribute{}.Fields()
	_ = placeinventoryattributeFields
	// placeinventoryattributeDescID is the schema descriptor for id field.
	placeinventoryattributeDescID := placeinventoryattributeFields[0].Descriptor()
	// placeinventoryattribute.IDValidator is a validator for the "id" field. It is called by the builders before save.
	placeinventoryattribute.IDValidator = placeinventoryattributeDescID.Validators[0].(func(string) error)
	placetableFields := schema.PlaceTable{}.Fields()
	_ = placetableFields
	// placetableDescCapacity is the schema descriptor for capacity field.
	placetableDescCapacity := placetableFields[3].Descriptor()
	// placetable.DefaultCapacity holds the default value on creation for the capacity field.
	placetable.DefaultCapacity = placetableDescCapacity.Default.(int)
	// placetableDescIsDeleted is the schema descriptor for is_deleted field.
	placetableDescIsDeleted := placetableFields[5].Descriptor()
	// placetable.DefaultIsDeleted holds the default value on creation for the is_deleted field.
	placetable.DefaultIsDeleted = placetableDescIsDeleted.Default.(bool)
	// placetableDescStatus is the schema descriptor for status field.
	placetableDescStatus := placetableFields[8].Descriptor()
	// placetable.DefaultStatus holds the default value on creation for the status field.
	placetable.DefaultStatus = placetableDescStatus.Default.(string)
	// placetableDescIsActive is the schema descriptor for is_active field.
	placetableDescIsActive := placetableFields[10].Descriptor()
	// placetable.DefaultIsActive holds the default value on creation for the is_active field.
	placetable.DefaultIsActive = placetableDescIsActive.Default.(bool)
	// placetableDescIsReserved is the schema descriptor for is_reserved field.
	placetableDescIsReserved := placetableFields[11].Descriptor()
	// placetable.DefaultIsReserved holds the default value on creation for the is_reserved field.
	placetable.DefaultIsReserved = placetableDescIsReserved.Default.(bool)
	// placetableDescIsVip is the schema descriptor for is_vip field.
	placetableDescIsVip := placetableFields[12].Descriptor()
	// placetable.DefaultIsVip holds the default value on creation for the is_vip field.
	placetable.DefaultIsVip = placetableDescIsVip.Default.(bool)
	// placetableDescIsPremium is the schema descriptor for is_premium field.
	placetableDescIsPremium := placetableFields[13].Descriptor()
	// placetable.DefaultIsPremium holds the default value on creation for the is_premium field.
	placetable.DefaultIsPremium = placetableDescIsPremium.Default.(bool)
	// placetableDescID is the schema descriptor for id field.
	placetableDescID := placetableFields[0].Descriptor()
	// placetable.IDValidator is a validator for the "id" field. It is called by the builders before save.
	placetable.IDValidator = placetableDescID.Validators[0].(func(string) error)
	planFields := schema.Plan{}.Fields()
	_ = planFields
	// planDescID is the schema descriptor for id field.
	planDescID := planFields[0].Descriptor()
	// plan.IDValidator is a validator for the "id" field. It is called by the builders before save.
	plan.IDValidator = planDescID.Validators[0].(func(string) error)
	postFields := schema.Post{}.Fields()
	_ = postFields
	// postDescContent is the schema descriptor for Content field.
	postDescContent := postFields[1].Descriptor()
	// post.ContentValidator is a validator for the "Content" field. It is called by the builders before save.
	post.ContentValidator = postDescContent.Validators[0].(func(string) error)
	// postDescCreatedAt is the schema descriptor for CreatedAt field.
	postDescCreatedAt := postFields[2].Descriptor()
	// post.DefaultCreatedAt holds the default value on creation for the CreatedAt field.
	post.DefaultCreatedAt = postDescCreatedAt.Default.(func() time.Time)
	// postDescUpdatedAt is the schema descriptor for UpdatedAt field.
	postDescUpdatedAt := postFields[3].Descriptor()
	// post.UpdateDefaultUpdatedAt holds the default value on update for the UpdatedAt field.
	post.UpdateDefaultUpdatedAt = postDescUpdatedAt.UpdateDefault.(func() time.Time)
	// postDescLikedByMe is the schema descriptor for LikedByMe field.
	postDescLikedByMe := postFields[5].Descriptor()
	// post.DefaultLikedByMe holds the default value on creation for the LikedByMe field.
	post.DefaultLikedByMe = postDescLikedByMe.Default.(bool)
	// postDescLikeCount is the schema descriptor for LikeCount field.
	postDescLikeCount := postFields[6].Descriptor()
	// post.DefaultLikeCount holds the default value on creation for the LikeCount field.
	post.DefaultLikeCount = postDescLikeCount.Default.(int)
	// postDescCommentCount is the schema descriptor for CommentCount field.
	postDescCommentCount := postFields[7].Descriptor()
	// post.DefaultCommentCount holds the default value on creation for the CommentCount field.
	post.DefaultCommentCount = postDescCommentCount.Default.(int)
	// postDescShareCount is the schema descriptor for ShareCount field.
	postDescShareCount := postFields[8].Descriptor()
	// post.DefaultShareCount holds the default value on creation for the ShareCount field.
	post.DefaultShareCount = postDescShareCount.Default.(int)
	// postDescViewCount is the schema descriptor for ViewCount field.
	postDescViewCount := postFields[9].Descriptor()
	// post.DefaultViewCount holds the default value on creation for the ViewCount field.
	post.DefaultViewCount = postDescViewCount.Default.(int)
	// postDescIsSponsored is the schema descriptor for IsSponsored field.
	postDescIsSponsored := postFields[10].Descriptor()
	// post.DefaultIsSponsored holds the default value on creation for the IsSponsored field.
	post.DefaultIsSponsored = postDescIsSponsored.Default.(bool)
	// postDescIsPromoted is the schema descriptor for IsPromoted field.
	postDescIsPromoted := postFields[11].Descriptor()
	// post.DefaultIsPromoted holds the default value on creation for the IsPromoted field.
	post.DefaultIsPromoted = postDescIsPromoted.Default.(bool)
	// postDescIsBoosted is the schema descriptor for IsBoosted field.
	postDescIsBoosted := postFields[12].Descriptor()
	// post.DefaultIsBoosted holds the default value on creation for the IsBoosted field.
	post.DefaultIsBoosted = postDescIsBoosted.Default.(bool)
	// postDescIsPinned is the schema descriptor for IsPinned field.
	postDescIsPinned := postFields[13].Descriptor()
	// post.DefaultIsPinned holds the default value on creation for the IsPinned field.
	post.DefaultIsPinned = postDescIsPinned.Default.(bool)
	// postDescIsHidden is the schema descriptor for IsHidden field.
	postDescIsHidden := postFields[14].Descriptor()
	// post.DefaultIsHidden holds the default value on creation for the IsHidden field.
	post.DefaultIsHidden = postDescIsHidden.Default.(bool)
	// postDescRepostCount is the schema descriptor for RepostCount field.
	postDescRepostCount := postFields[15].Descriptor()
	// post.DefaultRepostCount holds the default value on creation for the RepostCount field.
	post.DefaultRepostCount = postDescRepostCount.Default.(int)
	// postDescIsRepost is the schema descriptor for IsRepost field.
	postDescIsRepost := postFields[16].Descriptor()
	// post.DefaultIsRepost holds the default value on creation for the IsRepost field.
	post.DefaultIsRepost = postDescIsRepost.Default.(bool)
	// postDescRelevanceScore is the schema descriptor for RelevanceScore field.
	postDescRelevanceScore := postFields[17].Descriptor()
	// post.DefaultRelevanceScore holds the default value on creation for the RelevanceScore field.
	post.DefaultRelevanceScore = postDescRelevanceScore.Default.(int)
	// postDescID is the schema descriptor for id field.
	postDescID := postFields[0].Descriptor()
	// post.IDValidator is a validator for the "id" field. It is called by the builders before save.
	post.IDValidator = postDescID.Validators[0].(func(string) error)
	priceFields := schema.Price{}.Fields()
	_ = priceFields
	// priceDescID is the schema descriptor for id field.
	priceDescID := priceFields[0].Descriptor()
	// price.IDValidator is a validator for the "id" field. It is called by the builders before save.
	price.IDValidator = priceDescID.Validators[0].(func(string) error)
	ratingHooks := schema.Rating{}.Hooks()
	rating.Hooks[0] = ratingHooks[0]
	ratingFields := schema.Rating{}.Fields()
	_ = ratingFields
	// ratingDescScore is the schema descriptor for score field.
	ratingDescScore := ratingFields[1].Descriptor()
	// rating.ScoreValidator is a validator for the "score" field. It is called by the builders before save.
	rating.ScoreValidator = func() func(int) error {
		validators := ratingDescScore.Validators
		fns := [...]func(int) error{
			validators[0].(func(int) error),
			validators[1].(func(int) error),
		}
		return func(score int) error {
			for _, fn := range fns {
				if err := fn(score); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// ratingDescRatedAt is the schema descriptor for ratedAt field.
	ratingDescRatedAt := ratingFields[3].Descriptor()
	// rating.DefaultRatedAt holds the default value on creation for the ratedAt field.
	rating.DefaultRatedAt = ratingDescRatedAt.Default.(func() time.Time)
	reservationFields := schema.Reservation{}.Fields()
	_ = reservationFields
	// reservationDescID is the schema descriptor for id field.
	reservationDescID := reservationFields[0].Descriptor()
	// reservation.IDValidator is a validator for the "id" field. It is called by the builders before save.
	reservation.IDValidator = reservationDescID.Validators[0].(func(string) error)
	reviewHooks := schema.Review{}.Hooks()
	review.Hooks[0] = reviewHooks[0]
	reviewFields := schema.Review{}.Fields()
	_ = reviewFields
	// reviewDescScore is the schema descriptor for score field.
	reviewDescScore := reviewFields[1].Descriptor()
	// review.ScoreValidator is a validator for the "score" field. It is called by the builders before save.
	review.ScoreValidator = func() func(float64) error {
		validators := reviewDescScore.Validators
		fns := [...]func(float64) error{
			validators[0].(func(float64) error),
			validators[1].(func(float64) error),
		}
		return func(score float64) error {
			for _, fn := range fns {
				if err := fn(score); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// reviewDescCreatedAt is the schema descriptor for createdAt field.
	reviewDescCreatedAt := reviewFields[3].Descriptor()
	// review.DefaultCreatedAt holds the default value on creation for the createdAt field.
	review.DefaultCreatedAt = reviewDescCreatedAt.Default.(func() time.Time)
	// reviewDescLikeCount is the schema descriptor for likeCount field.
	reviewDescLikeCount := reviewFields[4].Descriptor()
	// review.DefaultLikeCount holds the default value on creation for the likeCount field.
	review.DefaultLikeCount = reviewDescLikeCount.Default.(int)
	// reviewDescDislikeCount is the schema descriptor for dislikeCount field.
	reviewDescDislikeCount := reviewFields[5].Descriptor()
	// review.DefaultDislikeCount holds the default value on creation for the dislikeCount field.
	review.DefaultDislikeCount = reviewDescDislikeCount.Default.(int)
	// reviewDescFlag is the schema descriptor for flag field.
	reviewDescFlag := reviewFields[6].Descriptor()
	// review.DefaultFlag holds the default value on creation for the flag field.
	review.DefaultFlag = reviewDescFlag.Default.(string)
	roomFields := schema.Room{}.Fields()
	_ = roomFields
	// roomDescAvailability is the schema descriptor for availability field.
	roomDescAvailability := roomFields[12].Descriptor()
	// room.DefaultAvailability holds the default value on creation for the availability field.
	room.DefaultAvailability = roomDescAvailability.Default.(bool)
	// roomDescID is the schema descriptor for id field.
	roomDescID := roomFields[0].Descriptor()
	// room.IDValidator is a validator for the "id" field. It is called by the builders before save.
	room.IDValidator = roomDescID.Validators[0].(func(string) error)
	roomcategoryFields := schema.RoomCategory{}.Fields()
	_ = roomcategoryFields
	// roomcategoryDescID is the schema descriptor for id field.
	roomcategoryDescID := roomcategoryFields[0].Descriptor()
	// roomcategory.IDValidator is a validator for the "id" field. It is called by the builders before save.
	roomcategory.IDValidator = roomcategoryDescID.Validators[0].(func(string) error)
	staffFields := schema.Staff{}.Fields()
	_ = staffFields
	// staffDescID is the schema descriptor for id field.
	staffDescID := staffFields[0].Descriptor()
	// staff.IDValidator is a validator for the "id" field. It is called by the builders before save.
	staff.IDValidator = staffDescID.Validators[0].(func(string) error)
	subscriptionFields := schema.Subscription{}.Fields()
	_ = subscriptionFields
	// subscriptionDescID is the schema descriptor for id field.
	subscriptionDescID := subscriptionFields[0].Descriptor()
	// subscription.IDValidator is a validator for the "id" field. It is called by the builders before save.
	subscription.IDValidator = subscriptionDescID.Validators[0].(func(string) error)
	ticketFields := schema.Ticket{}.Fields()
	_ = ticketFields
	// ticketDescCreatedAt is the schema descriptor for createdAt field.
	ticketDescCreatedAt := ticketFields[6].Descriptor()
	// ticket.DefaultCreatedAt holds the default value on creation for the createdAt field.
	ticket.DefaultCreatedAt = ticketDescCreatedAt.Default.(func() time.Time)
	// ticketDescUpdatedAt is the schema descriptor for updatedAt field.
	ticketDescUpdatedAt := ticketFields[7].Descriptor()
	// ticket.DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	ticket.DefaultUpdatedAt = ticketDescUpdatedAt.Default.(func() time.Time)
	// ticket.UpdateDefaultUpdatedAt holds the default value on update for the updatedAt field.
	ticket.UpdateDefaultUpdatedAt = ticketDescUpdatedAt.UpdateDefault.(func() time.Time)
	ticketoptionFields := schema.TicketOption{}.Fields()
	_ = ticketoptionFields
	// ticketoptionDescName is the schema descriptor for name field.
	ticketoptionDescName := ticketoptionFields[1].Descriptor()
	// ticketoption.NameValidator is a validator for the "name" field. It is called by the builders before save.
	ticketoption.NameValidator = ticketoptionDescName.Validators[0].(func(string) error)
	// ticketoptionDescPrice is the schema descriptor for price field.
	ticketoptionDescPrice := ticketoptionFields[3].Descriptor()
	// ticketoption.DefaultPrice holds the default value on creation for the price field.
	ticketoption.DefaultPrice = ticketoptionDescPrice.Default.(float64)
	// ticketoption.PriceValidator is a validator for the "price" field. It is called by the builders before save.
	ticketoption.PriceValidator = ticketoptionDescPrice.Validators[0].(func(float64) error)
	// ticketoptionDescQuantityAvailable is the schema descriptor for quantityAvailable field.
	ticketoptionDescQuantityAvailable := ticketoptionFields[4].Descriptor()
	// ticketoption.DefaultQuantityAvailable holds the default value on creation for the quantityAvailable field.
	ticketoption.DefaultQuantityAvailable = ticketoptionDescQuantityAvailable.Default.(int)
	// ticketoptionDescQuantitySold is the schema descriptor for quantitySold field.
	ticketoptionDescQuantitySold := ticketoptionFields[5].Descriptor()
	// ticketoption.DefaultQuantitySold holds the default value on creation for the quantitySold field.
	ticketoption.DefaultQuantitySold = ticketoptionDescQuantitySold.Default.(int)
	// ticketoptionDescDiscount is the schema descriptor for discount field.
	ticketoptionDescDiscount := ticketoptionFields[7].Descriptor()
	// ticketoption.DefaultDiscount holds the default value on creation for the discount field.
	ticketoption.DefaultDiscount = ticketoptionDescDiscount.Default.(float64)
	// ticketoptionDescCreatedAt is the schema descriptor for createdAt field.
	ticketoptionDescCreatedAt := ticketoptionFields[8].Descriptor()
	// ticketoption.DefaultCreatedAt holds the default value on creation for the createdAt field.
	ticketoption.DefaultCreatedAt = ticketoptionDescCreatedAt.Default.(func() time.Time)
	// ticketoptionDescUpdatedAt is the schema descriptor for updatedAt field.
	ticketoptionDescUpdatedAt := ticketoptionFields[9].Descriptor()
	// ticketoption.DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	ticketoption.DefaultUpdatedAt = ticketoptionDescUpdatedAt.Default.(func() time.Time)
	// ticketoption.UpdateDefaultUpdatedAt holds the default value on update for the updatedAt field.
	ticketoption.UpdateDefaultUpdatedAt = ticketoptionDescUpdatedAt.UpdateDefault.(func() time.Time)
	trainerFields := schema.Trainer{}.Fields()
	_ = trainerFields
	// trainerDescID is the schema descriptor for id field.
	trainerDescID := trainerFields[0].Descriptor()
	// trainer.IDValidator is a validator for the "id" field. It is called by the builders before save.
	trainer.IDValidator = trainerDescID.Validators[0].(func(string) error)
	transactionhistoryFields := schema.TransactionHistory{}.Fields()
	_ = transactionhistoryFields
	// transactionhistoryDescDate is the schema descriptor for date field.
	transactionhistoryDescDate := transactionhistoryFields[2].Descriptor()
	// transactionhistory.DefaultDate holds the default value on creation for the date field.
	transactionhistory.DefaultDate = transactionhistoryDescDate.Default.(func() time.Time)
	userHooks := schema.User{}.Hooks()
	user.Hooks[0] = userHooks[0]
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCoverImage is the schema descriptor for cover_image field.
	userDescCoverImage := userFields[4].Descriptor()
	// user.DefaultCoverImage holds the default value on creation for the cover_image field.
	user.DefaultCoverImage = userDescCoverImage.Default.(string)
	// userDescBio is the schema descriptor for bio field.
	userDescBio := userFields[11].Descriptor()
	// user.DefaultBio holds the default value on creation for the bio field.
	user.DefaultBio = userDescBio.Default.(string)
	// userDescFollowerCount is the schema descriptor for follower_count field.
	userDescFollowerCount := userFields[17].Descriptor()
	// user.DefaultFollowerCount holds the default value on creation for the follower_count field.
	user.DefaultFollowerCount = userDescFollowerCount.Default.(int)
	// userDescFollowingCount is the schema descriptor for following_count field.
	userDescFollowingCount := userFields[18].Descriptor()
	// user.DefaultFollowingCount holds the default value on creation for the following_count field.
	user.DefaultFollowingCount = userDescFollowingCount.Default.(int)
	// userDescIsPremium is the schema descriptor for is_premium field.
	userDescIsPremium := userFields[21].Descriptor()
	// user.DefaultIsPremium holds the default value on creation for the is_premium field.
	user.DefaultIsPremium = userDescIsPremium.Default.(bool)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.IDValidator is a validator for the "id" field. It is called by the builders before save.
	user.IDValidator = userDescID.Validators[0].(func(string) error)
	userbusinessFields := schema.UserBusiness{}.Fields()
	_ = userbusinessFields
	// userbusinessDescPermissions is the schema descriptor for permissions field.
	userbusinessDescPermissions := userbusinessFields[2].Descriptor()
	// userbusiness.PermissionsValidator is a validator for the "permissions" field. It is called by the builders before save.
	userbusiness.PermissionsValidator = userbusinessDescPermissions.Validators[0].(func(string) error)
	// userbusinessDescID is the schema descriptor for id field.
	userbusinessDescID := userbusinessFields[0].Descriptor()
	// userbusiness.IDValidator is a validator for the "id" field. It is called by the builders before save.
	userbusiness.IDValidator = userbusinessDescID.Validators[0].(func(string) error)
	userfollowbusinessFields := schema.UserFollowBusiness{}.Fields()
	_ = userfollowbusinessFields
	// userfollowbusinessDescCreatedAt is the schema descriptor for CreatedAt field.
	userfollowbusinessDescCreatedAt := userfollowbusinessFields[1].Descriptor()
	// userfollowbusiness.DefaultCreatedAt holds the default value on creation for the CreatedAt field.
	userfollowbusiness.DefaultCreatedAt = userfollowbusinessDescCreatedAt.Default.(func() time.Time)
	// userfollowbusinessDescUpdatedAt is the schema descriptor for UpdatedAt field.
	userfollowbusinessDescUpdatedAt := userfollowbusinessFields[2].Descriptor()
	// userfollowbusiness.UpdateDefaultUpdatedAt holds the default value on update for the UpdatedAt field.
	userfollowbusiness.UpdateDefaultUpdatedAt = userfollowbusinessDescUpdatedAt.UpdateDefault.(func() time.Time)
	userfolloweventFields := schema.UserFollowEvent{}.Fields()
	_ = userfolloweventFields
	// userfolloweventDescCreatedAt is the schema descriptor for createdAt field.
	userfolloweventDescCreatedAt := userfolloweventFields[1].Descriptor()
	// userfollowevent.DefaultCreatedAt holds the default value on creation for the createdAt field.
	userfollowevent.DefaultCreatedAt = userfolloweventDescCreatedAt.Default.(func() time.Time)
	// userfolloweventDescUpdatedAt is the schema descriptor for updatedAt field.
	userfolloweventDescUpdatedAt := userfolloweventFields[2].Descriptor()
	// userfollowevent.DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	userfollowevent.DefaultUpdatedAt = userfolloweventDescUpdatedAt.Default.(func() time.Time)
	// userfollowevent.UpdateDefaultUpdatedAt holds the default value on update for the updatedAt field.
	userfollowevent.UpdateDefaultUpdatedAt = userfolloweventDescUpdatedAt.UpdateDefault.(func() time.Time)
	userfollowplaceFields := schema.UserFollowPlace{}.Fields()
	_ = userfollowplaceFields
	// userfollowplaceDescCreatedAt is the schema descriptor for CreatedAt field.
	userfollowplaceDescCreatedAt := userfollowplaceFields[1].Descriptor()
	// userfollowplace.DefaultCreatedAt holds the default value on creation for the CreatedAt field.
	userfollowplace.DefaultCreatedAt = userfollowplaceDescCreatedAt.Default.(func() time.Time)
	// userfollowplaceDescUpdatedAt is the schema descriptor for UpdatedAt field.
	userfollowplaceDescUpdatedAt := userfollowplaceFields[2].Descriptor()
	// userfollowplace.UpdateDefaultUpdatedAt holds the default value on update for the UpdatedAt field.
	userfollowplace.UpdateDefaultUpdatedAt = userfollowplaceDescUpdatedAt.UpdateDefault.(func() time.Time)
	userfollowuserFields := schema.UserFollowUser{}.Fields()
	_ = userfollowuserFields
	// userfollowuserDescCreatedAt is the schema descriptor for CreatedAt field.
	userfollowuserDescCreatedAt := userfollowuserFields[1].Descriptor()
	// userfollowuser.DefaultCreatedAt holds the default value on creation for the CreatedAt field.
	userfollowuser.DefaultCreatedAt = userfollowuserDescCreatedAt.Default.(func() time.Time)
	// userfollowuserDescUpdatedAt is the schema descriptor for UpdatedAt field.
	userfollowuserDescUpdatedAt := userfollowuserFields[2].Descriptor()
	// userfollowuser.UpdateDefaultUpdatedAt holds the default value on update for the UpdatedAt field.
	userfollowuser.UpdateDefaultUpdatedAt = userfollowuserDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userfollowuserDescID is the schema descriptor for id field.
	userfollowuserDescID := userfollowuserFields[0].Descriptor()
	// userfollowuser.IDValidator is a validator for the "id" field. It is called by the builders before save.
	userfollowuser.IDValidator = userfollowuserDescID.Validators[0].(func(string) error)
	userlikeplaceFields := schema.UserLikePlace{}.Fields()
	_ = userlikeplaceFields
	// userlikeplaceDescCreatedAt is the schema descriptor for CreatedAt field.
	userlikeplaceDescCreatedAt := userlikeplaceFields[1].Descriptor()
	// userlikeplace.DefaultCreatedAt holds the default value on creation for the CreatedAt field.
	userlikeplace.DefaultCreatedAt = userlikeplaceDescCreatedAt.Default.(func() time.Time)
	// userlikeplaceDescUpdatedAt is the schema descriptor for UpdatedAt field.
	userlikeplaceDescUpdatedAt := userlikeplaceFields[2].Descriptor()
	// userlikeplace.UpdateDefaultUpdatedAt holds the default value on update for the UpdatedAt field.
	userlikeplace.UpdateDefaultUpdatedAt = userlikeplaceDescUpdatedAt.UpdateDefault.(func() time.Time)
	websiteFields := schema.Website{}.Fields()
	_ = websiteFields
	// websiteDescCreationDate is the schema descriptor for creationDate field.
	websiteDescCreationDate := websiteFields[22].Descriptor()
	// website.DefaultCreationDate holds the default value on creation for the creationDate field.
	website.DefaultCreationDate = websiteDescCreationDate.Default.(func() time.Time)
	// websiteDescLastUpdated is the schema descriptor for lastUpdated field.
	websiteDescLastUpdated := websiteFields[23].Descriptor()
	// website.UpdateDefaultLastUpdated holds the default value on update for the lastUpdated field.
	website.UpdateDefaultLastUpdated = websiteDescLastUpdated.UpdateDefault.(func() time.Time)
}

const (
	Version = "v0.12.5"                                         // Version of ent codegen.
	Sum     = "h1:KREM5E4CSoej4zeGa88Ou/gfturAnpUv0mzAjch1sj4=" // Sum of ent codegen.
)
