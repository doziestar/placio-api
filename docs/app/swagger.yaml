basePath: /api/v1
definitions:
  gin.H:
    additionalProperties: {}
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  management.User:
    properties:
      app_metadata:
        additionalProperties: true
        description: |-
          AppMetadata holds data that the user has read-only access to.
          For example roles, permissions, vip, etc.
          NOTE: Roles added to AppMetadata are not integrated with Auth0 Role-Based Access Control (RBAC).
          For RBAC, see the functions User.Roles, User.AssignRoles, and User.RemoveRoles.
        type: object
      blocked:
        description: True if the user is blocked from the application, false if the
          user is enabled.
        type: boolean
      client_id:
        description: Auth0 client ID. Only valid when updating email address.
        type: string
      connection:
        description: The connection the user belongs to.
        type: string
      created_at:
        description: The time the user was created.
        type: string
      description:
        description: The user-defined UTF-8 string describing their account.
        type: string
      email:
        description: The users' email.
        type: string
      family_name:
        description: The users' family name.
        type: string
      given_name:
        description: The users' given name.
        type: string
      identities:
        description: Identities is a list of user identities for when accounts are
          linked.
        items:
          $ref: '#/definitions/management.UserIdentity'
        type: array
      last_ip:
        description: Last IP address from which this user logged in. Read only, cannot
          be modified.
        type: string
      last_login:
        description: The last time the user has logged in.
        type: string
      last_password_reset:
        description: |-
          The last time the user had their password reset.
          Only available for Database connection users.
        type: string
      location:
        description: The user-defined location for this accountâ€™s profile.
        type: string
      logins_count:
        description: Total number of logins this user has performed. Read only, cannot
          be modified.
        type: integer
      multifactor:
        description: List of multi-factor authentication providers with which this
          user has enrolled.
        items:
          type: string
        type: array
      name:
        description: The users' name.
        type: string
      nickname:
        description: The users' nickname.
        type: string
      password:
        description: The users' password (mandatory for non SMS connections)
        type: string
      phone_number:
        description: |-
          The users' phone number (following the E.164 recommendation).
          Only valid for users to be added to SMS connections.
        type: string
      phone_verified:
        description: |-
          True if the user's phone number is verified, false otherwise. When the
          user is added to an SMS connection, they will not receive a verification
          SMS if this is true.
        type: boolean
      picture:
        description: The user's picture url.
        type: string
      screen_name:
        description: The screen name, handle, or alias that this user identifies themselves
          with.
        type: string
      updated_at:
        description: The last time the user was updated.
        type: string
      url:
        description: A URL provided by the user in association with their profile.
        type: string
      user_id:
        description: The users' identifier.
        type: string
      user_metadata:
        additionalProperties: true
        description: |-
          UserMetadata holds data that the user has read/write access to.
          For example color_preference, blog_url, etc.
        type: object
      username:
        description: The users' username. Only valid if the connection requires a
          username.
        type: string
      verify_email:
        description: |-
          If true, the user will receive a verification email after creation, even
          if created with email_verified set to true. If false, the user will not
          receive a verification email, even if created with email_verified set to
          false. If unspecified, defaults to the behavior determined by the value
          of email_verified.
        type: boolean
    type: object
  management.UserIdentity:
    properties:
      access_token:
        type: string
      access_token_secret:
        type: string
      connection:
        type: string
      isSocial:
        type: boolean
      profileData:
        additionalProperties: true
        type: object
      provider:
        type: string
      refresh_token:
        type: string
    type: object
  placio-app_Dto.AmenityAdditionDTO:
    properties:
      amenity_ids:
        items:
          type: string
        type: array
    type: object
  placio-app_Dto.BusinessAccountPlacesAndEvents:
    properties:
      events:
        items:
          $ref: '#/definitions/placio-app_ent.Event'
        type: array
      places:
        items:
          $ref: '#/definitions/placio-app_ent.Place'
        type: array
    type: object
  placio-app_Dto.BusinessDto:
    properties:
      cover_image:
        type: string
      description:
        type: string
      email:
        type: string
      location:
        type: string
      name:
        type: string
      phone:
        type: string
      picture:
        type: string
      website:
        type: string
    type: object
  placio-app_Dto.CommentResponseDto:
    properties:
      content:
        type: string
      createdAt:
        type: string
      id:
        type: string
      updatedAt:
        type: string
      user:
        $ref: '#/definitions/placio-app_ent.User'
    type: object
  placio-app_Dto.CreateAmenityInput:
    properties:
      icon:
        type: string
      name:
        type: string
    type: object
  placio-app_Dto.CreatePlaceDTO:
    properties:
      additional_info:
        additionalProperties: true
        type: object
      amenity_ids:
        items:
          type: string
        type: array
      availability:
        additionalProperties: true
        type: object
      business_id:
        type: string
      city:
        type: string
      country:
        type: string
      cover_image:
        type: string
      description:
        type: string
      email:
        type: string
      features:
        items:
          type: string
        type: array
      id:
        type: string
      images:
        items:
          type: string
        type: array
      location:
        type: string
      map_coordinates:
        additionalProperties: true
        type: object
      name:
        type: string
      opening_hours:
        additionalProperties: true
        type: object
      phone:
        type: string
      picture:
        type: string
      place_settings:
        additionalProperties: true
        type: object
      relevance_score:
        type: number
      search_text:
        type: string
      social_media:
        additionalProperties: true
        type: object
      special_offers:
        type: string
      state:
        type: string
      sustainability_score:
        type: number
      tags:
        items:
          type: string
        type: array
      type:
        type: string
      website:
        type: string
    type: object
  placio-app_Dto.Error:
    properties:
      message:
        type: string
      status:
        type: integer
    type: object
  placio-app_Dto.ErrorDTO:
    properties:
      message:
        type: string
      status:
        type: integer
    type: object
  placio-app_Dto.ErrorDto:
    properties:
      message:
        type: string
      status:
        type: integer
    type: object
  placio-app_Dto.EventDTO:
    properties:
      coverImage:
        type: string
      createdAt:
        type: string
      description:
        type: string
      endDate:
        type: string
      endTime:
        type: string
      eventSettings:
        additionalProperties: true
        type: object
      eventType:
        type: string
      frequency:
        type: string
      frequencyDayOfMonth:
        type: string
      frequencyDayOfWeek:
        type: string
      frequencyInterval:
        type: string
      frequencyMonthOfYear:
        type: string
      id:
        type: string
      location:
        type: string
      name:
        type: string
      startDate:
        type: string
      startTime:
        type: string
      status:
        type: string
      tags:
        items:
          type: string
        type: array
      timeZone:
        type: string
      title:
        type: string
      updatedAt:
        type: string
      url:
        type: string
      venueAddress:
        type: string
      venueCity:
        type: string
      venueCountry:
        type: string
      venueEmail:
        type: string
      venueLat:
        type: string
      venueLon:
        type: string
      venueName:
        type: string
      venuePhone:
        type: string
      venueState:
        type: string
      venueType:
        type: string
      venueURL:
        type: string
      venueZIP:
        type: string
    type: object
  placio-app_Dto.FAQDto:
    properties:
      answer:
        type: string
      question:
        type: string
    type: object
  placio-app_Dto.MediaDto:
    properties:
      type:
        type: string
      url:
        type: string
    type: object
  placio-app_Dto.PermissionDTO:
    properties:
      message:
        type: string
      status:
        type: integer
    type: object
  placio-app_Dto.PostDto:
    properties:
      business_id:
        description: It can be empty if it does not exist
        type: string
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      medias:
        items:
          $ref: '#/definitions/placio-app_Dto.MediaDto'
        type: array
      privacy:
        type: string
      user_id:
        type: string
    type: object
  placio-app_Dto.PostResponseDto:
    properties:
      business:
        allOf:
        - $ref: '#/definitions/placio-app_ent.Business'
        description: It can be empty if it does not exist
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      medias:
        items:
          $ref: '#/definitions/placio-app_Dto.MediaDto'
        type: array
      user:
        $ref: '#/definitions/placio-app_ent.User'
    type: object
  placio-app_Dto.RatingDTO:
    properties:
      business:
        $ref: '#/definitions/placio-app_ent.Business'
      event:
        $ref: '#/definitions/placio-app_ent.Event'
      place:
        $ref: '#/definitions/placio-app_ent.Place'
      score:
        type: integer
      user:
        $ref: '#/definitions/placio-app_ent.User'
    type: object
  placio-app_Dto.Response:
    properties:
      data: {}
      message:
        type: string
      status:
        type: integer
    type: object
  placio-app_Dto.SearchResponse:
    type: object
  placio-app_Dto.SearchResponses:
    properties:
      businesses:
        items:
          $ref: '#/definitions/placio-app_ent.Business'
        type: array
      events:
        items:
          $ref: '#/definitions/placio-app_ent.Event'
        type: array
      places:
        items:
          $ref: '#/definitions/placio-app_ent.Place'
        type: array
      users:
        items:
          $ref: '#/definitions/placio-app_ent.User'
        type: array
    type: object
  placio-app_Dto.TeamMember:
    properties:
      permission:
        type: string
      role:
        type: string
    type: object
  placio-app_Dto.UpdateAmenityInput:
    properties:
      icon:
        type: string
      name:
        type: string
    type: object
  placio-app_Dto.UpdatePlaceDTO:
    properties:
      additional_info:
        additionalProperties: true
        type: object
      availability:
        additionalProperties: true
        type: object
      city:
        type: string
      country:
        type: string
      cover_image:
        type: string
      description:
        type: string
      email:
        type: string
      features:
        items:
          type: string
        type: array
      images:
        items:
          type: string
        type: array
      location:
        type: string
      map_coordinates:
        additionalProperties: true
        type: object
      name:
        type: string
      opening_hours:
        additionalProperties: true
        type: object
      phone:
        type: string
      picture:
        type: string
      place_settings:
        additionalProperties: true
        type: object
      relevance_score:
        type: number
      search_text:
        type: string
      social_media:
        additionalProperties: true
        type: object
      special_offers:
        type: string
      state:
        type: string
      sustainability_score:
        type: number
      tags:
        items:
          type: string
        type: array
      type:
        type: string
      website:
        type: string
    type: object
  placio-app_ent.AccountSettings:
    properties:
      BlockedUsers:
        description: BlockedUsers holds the value of the "BlockedUsers" field.
        items:
          type: string
        type: array
      MutedUsers:
        description: MutedUsers holds the value of the "MutedUsers" field.
        items:
          type: string
        type: array
      TwoFactorAuthentication:
        description: TwoFactorAuthentication holds the value of the "TwoFactorAuthentication"
          field.
        type: boolean
      edges:
        allOf:
        - $ref: '#/definitions/placio-app_ent.AccountSettingsEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the AccountSettingsQuery when eager-loading is set.
      id:
        description: ID of the ent.
        type: string
    type: object
  placio-app_ent.AccountSettingsEdges:
    properties:
      business_account:
        allOf:
        - $ref: '#/definitions/placio-app_ent.Business'
        description: BusinessAccount holds the value of the business_account edge.
    type: object
  placio-app_ent.Amenity:
    properties:
      edges:
        allOf:
        - $ref: '#/definitions/placio-app_ent.AmenityEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the AmenityQuery when eager-loading is set.
      icon:
        description: Icon holds the value of the "icon" field.
        type: string
      id:
        description: ID of the ent.
        type: string
      name:
        description: Name holds the value of the "name" field.
        type: string
    type: object
  placio-app_ent.AmenityEdges:
    properties:
      places:
        description: Places holds the value of the places edge.
        items:
          $ref: '#/definitions/placio-app_ent.Place'
        type: array
    type: object
  placio-app_ent.Booking:
    properties:
      bookingDate:
        description: BookingDate holds the value of the "bookingDate" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/placio-app_ent.BookingEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the BookingQuery when eager-loading is set.
      endDate:
        description: EndDate holds the value of the "endDate" field.
        type: string
      id:
        description: ID of the ent.
        type: string
      startDate:
        description: StartDate holds the value of the "startDate" field.
        type: string
      status:
        description: Status holds the value of the "status" field.
        type: string
    type: object
  placio-app_ent.BookingEdges:
    properties:
      room:
        allOf:
        - $ref: '#/definitions/placio-app_ent.Room'
        description: Room holds the value of the room edge.
      user:
        allOf:
        - $ref: '#/definitions/placio-app_ent.User'
        description: User holds the value of the user edge.
    type: object
  placio-app_ent.Business:
    properties:
      business_settings:
        additionalProperties: true
        description: BusinessSettings holds the value of the "business_settings" field.
        type: object
      cover_image:
        description: CoverImage holds the value of the "cover_image" field.
        type: string
      description:
        description: Description holds the value of the "description" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/placio-app_ent.BusinessEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the BusinessQuery when eager-loading is set.
      email:
        description: Email holds the value of the "email" field.
        type: string
      events_count:
        description: EventsCount holds the value of the "events_count" field.
        type: integer
      followers_count:
        description: FollowersCount holds the value of the "followers_count" field.
        type: integer
      following_count:
        description: FollowingCount holds the value of the "following_count" field.
        type: integer
      id:
        description: ID of the ent.
        type: string
      latitude:
        description: Latitude holds the value of the "latitude" field.
        type: string
      likes_count:
        description: LikesCount holds the value of the "likes_count" field.
        type: integer
      location:
        description: Location holds the value of the "location" field.
        type: string
      longitude:
        description: Longitude holds the value of the "longitude" field.
        type: string
      map_coordinates:
        additionalProperties: true
        description: MapCoordinates holds the value of the "map_coordinates" field.
        type: object
      name:
        description: Name holds the value of the "name" field.
        type: string
      phone:
        description: Phone holds the value of the "phone" field.
        type: string
      picture:
        description: Picture holds the value of the "picture" field.
        type: string
      places_count:
        description: PlacesCount holds the value of the "places_count" field.
        type: integer
      posts_count:
        description: PostsCount holds the value of the "posts_count" field.
        type: integer
      relevance_score:
        description: RelevanceScore holds the value of the "relevance_score" field.
        type: number
      search_text:
        description: SearchText holds the value of the "search_text" field.
        type: string
      url:
        description: URL holds the value of the "url" field.
        type: string
      website:
        description: Website holds the value of the "website" field.
        type: string
    type: object
  placio-app_ent.BusinessEdges:
    properties:
      business_account_settings:
        allOf:
        - $ref: '#/definitions/placio-app_ent.AccountSettings'
        description: BusinessAccountSettings holds the value of the business_account_settings
          edge.
      businessFollowEvents:
        description: BusinessFollowEvents holds the value of the businessFollowEvents
          edge.
        items:
          $ref: '#/definitions/placio-app_ent.BusinessFollowEvent'
        type: array
      categories:
        description: Categories holds the value of the categories edge.
        items:
          $ref: '#/definitions/placio-app_ent.Category'
        type: array
      categoryAssignments:
        description: CategoryAssignments holds the value of the categoryAssignments
          edge.
        items:
          $ref: '#/definitions/placio-app_ent.CategoryAssignment'
        type: array
      events:
        description: Events holds the value of the events edge.
        items:
          $ref: '#/definitions/placio-app_ent.Event'
        type: array
      faqs:
        description: Faqs holds the value of the faqs edge.
        items:
          $ref: '#/definitions/placio-app_ent.FAQ'
        type: array
      followedBusinesses:
        description: FollowedBusinesses holds the value of the followedBusinesses
          edge.
        items:
          $ref: '#/definitions/placio-app_ent.BusinessFollowBusiness'
        type: array
      followedUsers:
        description: FollowedUsers holds the value of the followedUsers edge.
        items:
          $ref: '#/definitions/placio-app_ent.BusinessFollowUser'
        type: array
      followerBusinesses:
        description: FollowerBusinesses holds the value of the followerBusinesses
          edge.
        items:
          $ref: '#/definitions/placio-app_ent.BusinessFollowBusiness'
        type: array
      followerUsers:
        description: FollowerUsers holds the value of the followerUsers edge.
        items:
          $ref: '#/definitions/placio-app_ent.UserFollowBusiness'
        type: array
      places:
        description: Places holds the value of the places edge.
        items:
          $ref: '#/definitions/placio-app_ent.Place'
        type: array
      posts:
        description: Posts holds the value of the posts edge.
        items:
          $ref: '#/definitions/placio-app_ent.Post'
        type: array
      ratings:
        description: Ratings holds the value of the ratings edge.
        items:
          $ref: '#/definitions/placio-app_ent.Rating'
        type: array
      userBusinesses:
        description: UserBusinesses holds the value of the userBusinesses edge.
        items:
          $ref: '#/definitions/placio-app_ent.UserBusiness'
        type: array
    type: object
  placio-app_ent.BusinessFollowBusiness:
    properties:
      CreatedAt:
        description: CreatedAt holds the value of the "CreatedAt" field.
        type: string
      UpdatedAt:
        description: UpdatedAt holds the value of the "UpdatedAt" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/placio-app_ent.BusinessFollowBusinessEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the BusinessFollowBusinessQuery when eager-loading is set.
      id:
        description: ID of the ent.
        type: string
    type: object
  placio-app_ent.BusinessFollowBusinessEdges:
    properties:
      followed:
        allOf:
        - $ref: '#/definitions/placio-app_ent.Business'
        description: Followed holds the value of the followed edge.
      follower:
        allOf:
        - $ref: '#/definitions/placio-app_ent.Business'
        description: Follower holds the value of the follower edge.
    type: object
  placio-app_ent.BusinessFollowEvent:
    properties:
      createdAt:
        description: CreatedAt holds the value of the "createdAt" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/placio-app_ent.BusinessFollowEventEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the BusinessFollowEventQuery when eager-loading is set.
      id:
        description: ID of the ent.
        type: string
      updatedAt:
        description: UpdatedAt holds the value of the "updatedAt" field.
        type: string
    type: object
  placio-app_ent.BusinessFollowEventEdges:
    properties:
      business:
        allOf:
        - $ref: '#/definitions/placio-app_ent.Business'
        description: Business holds the value of the business edge.
      event:
        allOf:
        - $ref: '#/definitions/placio-app_ent.Event'
        description: Event holds the value of the event edge.
    type: object
  placio-app_ent.BusinessFollowUser:
    properties:
      CreatedAt:
        description: CreatedAt holds the value of the "CreatedAt" field.
        type: string
      UpdatedAt:
        description: UpdatedAt holds the value of the "UpdatedAt" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/placio-app_ent.BusinessFollowUserEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the BusinessFollowUserQuery when eager-loading is set.
      id:
        description: ID of the ent.
        type: string
    type: object
  placio-app_ent.BusinessFollowUserEdges:
    properties:
      business:
        allOf:
        - $ref: '#/definitions/placio-app_ent.Business'
        description: Business holds the value of the business edge.
      user:
        allOf:
        - $ref: '#/definitions/placio-app_ent.User'
        description: User holds the value of the user edge.
    type: object
  placio-app_ent.Category:
    properties:
      edges:
        allOf:
        - $ref: '#/definitions/placio-app_ent.CategoryEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the CategoryQuery when eager-loading is set.
      id:
        description: ID of the ent.
        type: string
      image:
        description: Image holds the value of the "image" field.
        type: string
      name:
        description: Name holds the value of the "name" field.
        type: string
    type: object
  placio-app_ent.CategoryAssignment:
    properties:
      category_id:
        description: This represents the ID of the category
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/placio-app_ent.CategoryAssignmentEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the CategoryAssignmentQuery when eager-loading is set.
      entity_id:
        description: This represents the ID of User, Business or Place entity
        type: string
      entity_type:
        description: 'This represents the type of entity: User, Business, or Place'
        type: string
      id:
        description: ID of the ent.
        type: string
    type: object
  placio-app_ent.CategoryAssignmentEdges:
    properties:
      business:
        allOf:
        - $ref: '#/definitions/placio-app_ent.Business'
        description: Business holds the value of the business edge.
      category:
        allOf:
        - $ref: '#/definitions/placio-app_ent.Category'
        description: Category holds the value of the category edge.
      place:
        allOf:
        - $ref: '#/definitions/placio-app_ent.Place'
        description: Place holds the value of the place edge.
      user:
        allOf:
        - $ref: '#/definitions/placio-app_ent.User'
        description: User holds the value of the user edge.
    type: object
  placio-app_ent.CategoryEdges:
    properties:
      categoryAssignments:
        description: CategoryAssignments holds the value of the categoryAssignments
          edge.
        items:
          $ref: '#/definitions/placio-app_ent.CategoryAssignment'
        type: array
    type: object
  placio-app_ent.Comment:
    properties:
      Content:
        description: Content holds the value of the "Content" field.
        type: string
      CreatedAt:
        description: CreatedAt holds the value of the "CreatedAt" field.
        type: string
      UpdatedAt:
        description: UpdatedAt holds the value of the "UpdatedAt" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/placio-app_ent.CommentEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the CommentQuery when eager-loading is set.
      id:
        description: ID of the ent.
        type: string
    type: object
  placio-app_ent.CommentEdges:
    properties:
      post:
        allOf:
        - $ref: '#/definitions/placio-app_ent.Post'
        description: Post holds the value of the post edge.
      user:
        allOf:
        - $ref: '#/definitions/placio-app_ent.User'
        description: User holds the value of the user edge.
    type: object
  placio-app_ent.Event:
    properties:
      EventType:
        allOf:
        - $ref: '#/definitions/placio-app_ent_event.EventType'
        description: EventType holds the value of the "EventType" field.
      cover_image:
        description: CoverImage holds the value of the "cover_image" field.
        type: string
      createdAt:
        description: CreatedAt holds the value of the "createdAt" field.
        type: string
      description:
        description: Description holds the value of the "description" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/placio-app_ent.EventEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the EventQuery when eager-loading is set.
      end_date:
        description: EndDate holds the value of the "end_date" field.
        type: string
      end_time:
        description: EndTime holds the value of the "end_time" field.
        type: string
      event_settings:
        additionalProperties: true
        description: EventSettings holds the value of the "event_settings" field.
        type: object
      followers_count:
        description: FollowersCount holds the value of the "followers_count" field.
        type: integer
      following_count:
        description: FollowingCount holds the value of the "following_count" field.
        type: integer
      frequency:
        allOf:
        - $ref: '#/definitions/placio-app_ent_event.Frequency'
        description: Frequency holds the value of the "frequency" field.
      frequency_day_of_month:
        description: FrequencyDayOfMonth holds the value of the "frequency_day_of_month"
          field.
        type: string
      frequency_day_of_week:
        description: FrequencyDayOfWeek holds the value of the "frequency_day_of_week"
          field.
        type: string
      frequency_interval:
        description: FrequencyInterval holds the value of the "frequency_interval"
          field.
        type: string
      frequency_month_of_year:
        description: FrequencyMonthOfYear holds the value of the "frequency_month_of_year"
          field.
        type: string
      id:
        description: ID of the ent.
        type: string
      latitude:
        description: Latitude holds the value of the "latitude" field.
        type: string
      likes_count:
        description: LikesCount holds the value of the "likes_count" field.
        type: integer
      location:
        description: Location holds the value of the "location" field.
        type: string
      longitude:
        description: Longitude holds the value of the "longitude" field.
        type: string
      map_coordinates:
        additionalProperties: true
        description: MapCoordinates holds the value of the "map_coordinates" field.
        type: object
      name:
        description: Name holds the value of the "name" field.
        type: string
      relevance_score:
        description: RelevanceScore holds the value of the "relevance_score" field.
        type: number
      search_text:
        description: SearchText holds the value of the "search_text" field.
        type: string
      start_date:
        description: StartDate holds the value of the "start_date" field.
        type: string
      start_time:
        description: StartTime holds the value of the "start_time" field.
        type: string
      status:
        description: Status holds the value of the "status" field.
        type: string
      tags:
        description: Tags holds the value of the "tags" field.
        type: string
      time_zone:
        description: TimeZone holds the value of the "time_zone" field.
        type: string
      title:
        description: Title holds the value of the "title" field.
        type: string
      updatedAt:
        description: UpdatedAt holds the value of the "updatedAt" field.
        type: string
      url:
        description: URL holds the value of the "url" field.
        type: string
      venue_address:
        description: VenueAddress holds the value of the "venue_address" field.
        type: string
      venue_city:
        description: VenueCity holds the value of the "venue_city" field.
        type: string
      venue_country:
        description: VenueCountry holds the value of the "venue_country" field.
        type: string
      venue_email:
        description: VenueEmail holds the value of the "venue_email" field.
        type: string
      venue_lat:
        description: VenueLat holds the value of the "venue_lat" field.
        type: string
      venue_lon:
        description: VenueLon holds the value of the "venue_lon" field.
        type: string
      venue_name:
        description: VenueName holds the value of the "venue_name" field.
        type: string
      venue_phone:
        description: VenuePhone holds the value of the "venue_phone" field.
        type: string
      venue_state:
        description: VenueState holds the value of the "venue_state" field.
        type: string
      venue_type:
        allOf:
        - $ref: '#/definitions/placio-app_ent_event.VenueType'
        description: VenueType holds the value of the "venue_type" field.
      venue_url:
        description: VenueURL holds the value of the "venue_url" field.
        type: string
      venue_zip:
        description: VenueZip holds the value of the "venue_zip" field.
        type: string
    type: object
  placio-app_ent.EventEdges:
    properties:
      businessFollowers:
        description: BusinessFollowers holds the value of the businessFollowers edge.
        items:
          $ref: '#/definitions/placio-app_ent.BusinessFollowEvent'
        type: array
      event_categories:
        description: EventCategories holds the value of the event_categories edge.
        items:
          $ref: '#/definitions/placio-app_ent.Category'
        type: array
      event_category_assignments:
        description: EventCategoryAssignments holds the value of the event_category_assignments
          edge.
        items:
          $ref: '#/definitions/placio-app_ent.CategoryAssignment'
        type: array
      faqs:
        description: Faqs holds the value of the faqs edge.
        items:
          $ref: '#/definitions/placio-app_ent.FAQ'
        type: array
      ownerBusiness:
        allOf:
        - $ref: '#/definitions/placio-app_ent.Business'
        description: OwnerBusiness holds the value of the ownerBusiness edge.
      ownerUser:
        allOf:
        - $ref: '#/definitions/placio-app_ent.User'
        description: OwnerUser holds the value of the ownerUser edge.
      place:
        description: Place holds the value of the place edge.
        items:
          $ref: '#/definitions/placio-app_ent.Place'
        type: array
      ratings:
        description: Ratings holds the value of the ratings edge.
        items:
          $ref: '#/definitions/placio-app_ent.Rating'
        type: array
      ticket_options:
        description: TicketOptions holds the value of the ticket_options edge.
        items:
          $ref: '#/definitions/placio-app_ent.TicketOption'
        type: array
      tickets:
        description: Tickets holds the value of the tickets edge.
        items:
          $ref: '#/definitions/placio-app_ent.Ticket'
        type: array
      userFollowers:
        description: UserFollowers holds the value of the userFollowers edge.
        items:
          $ref: '#/definitions/placio-app_ent.UserFollowEvent'
        type: array
    type: object
  placio-app_ent.FAQ:
    properties:
      answer:
        description: Answer holds the value of the "answer" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/placio-app_ent.FAQEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the FAQQuery when eager-loading is set.
      id:
        description: ID of the ent.
        type: string
      question:
        description: Question holds the value of the "question" field.
        type: string
    type: object
  placio-app_ent.FAQEdges:
    properties:
      business:
        allOf:
        - $ref: '#/definitions/placio-app_ent.Business'
        description: Business holds the value of the business edge.
      event:
        description: Event holds the value of the event edge.
        items:
          $ref: '#/definitions/placio-app_ent.Event'
        type: array
      place:
        description: Place holds the value of the place edge.
        items:
          $ref: '#/definitions/placio-app_ent.Place'
        type: array
    type: object
  placio-app_ent.Help:
    properties:
      body:
        description: Body holds the value of the "body" field.
        type: string
      category:
        description: Category holds the value of the "category" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/placio-app_ent.HelpEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the HelpQuery when eager-loading is set.
      id:
        description: ID of the ent.
        type: string
      media:
        description: Media holds the value of the "media" field.
        type: string
      status:
        description: Status holds the value of the "status" field.
        type: string
      subject:
        description: Subject holds the value of the "subject" field.
        type: string
      user_id:
        description: UserID holds the value of the "user_id" field.
        type: string
    type: object
  placio-app_ent.HelpEdges:
    properties:
      user:
        allOf:
        - $ref: '#/definitions/placio-app_ent.User'
        description: User holds the value of the user edge.
    type: object
  placio-app_ent.Like:
    properties:
      createdAt:
        description: CreatedAt holds the value of the "createdAt" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/placio-app_ent.LikeEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the LikeQuery when eager-loading is set.
      id:
        description: ID of the ent.
        type: string
      like:
        description: True for like, False for dislike
        type: boolean
      updatedAt:
        description: UpdatedAt holds the value of the "updatedAt" field.
        type: string
    type: object
  placio-app_ent.LikeEdges:
    properties:
      media:
        allOf:
        - $ref: '#/definitions/placio-app_ent.Media'
        description: The media content that was liked/disliked.
      post:
        allOf:
        - $ref: '#/definitions/placio-app_ent.Post'
        description: Post holds the value of the post edge.
      review:
        allOf:
        - $ref: '#/definitions/placio-app_ent.Review'
        description: The review that was liked/disliked.
      user:
        allOf:
        - $ref: '#/definitions/placio-app_ent.User'
        description: The user who liked/disliked the review/media.
    type: object
  placio-app_ent.Media:
    properties:
      CreatedAt:
        description: CreatedAt holds the value of the "CreatedAt" field.
        type: string
      MediaType:
        description: image, gif, or video
        type: string
      URL:
        description: URL holds the value of the "URL" field.
        type: string
      UpdatedAt:
        description: UpdatedAt holds the value of the "UpdatedAt" field.
        type: string
      dislikeCount:
        description: Count of dislikes for this media.
        type: integer
      edges:
        allOf:
        - $ref: '#/definitions/placio-app_ent.MediaEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the MediaQuery when eager-loading is set.
      id:
        description: ID of the ent.
        type: string
      likeCount:
        description: Count of likes for this media.
        type: integer
    type: object
  placio-app_ent.MediaEdges:
    properties:
      categories:
        description: Categories holds the value of the categories edge.
        items:
          $ref: '#/definitions/placio-app_ent.Category'
        type: array
      post:
        allOf:
        - $ref: '#/definitions/placio-app_ent.Post'
        description: Post holds the value of the post edge.
      review:
        allOf:
        - $ref: '#/definitions/placio-app_ent.Review'
        description: Review holds the value of the review edge.
    type: object
  placio-app_ent.Menu:
    properties:
      edges:
        allOf:
        - $ref: '#/definitions/placio-app_ent.MenuEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the MenuQuery when eager-loading is set.
      id:
        description: ID of the ent.
        type: string
    type: object
  placio-app_ent.MenuEdges:
    properties:
      categories:
        description: Categories holds the value of the categories edge.
        items:
          $ref: '#/definitions/placio-app_ent.Category'
        type: array
      place:
        allOf:
        - $ref: '#/definitions/placio-app_ent.Place'
        description: Place holds the value of the place edge.
    type: object
  placio-app_ent.Place:
    properties:
      additional_info:
        additionalProperties: true
        description: AdditionalInfo holds the value of the "additional_info" field.
        type: object
      availability:
        additionalProperties: true
        description: Availability holds the value of the "availability" field.
        type: object
      city:
        description: City holds the value of the "city" field.
        type: string
      country:
        description: Country holds the value of the "country" field.
        type: string
      cover_image:
        description: CoverImage holds the value of the "cover_image" field.
        type: string
      description:
        description: Description holds the value of the "description" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/placio-app_ent.PlaceEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the PlaceQuery when eager-loading is set.
      email:
        description: Email holds the value of the "email" field.
        type: string
      features:
        description: Features holds the value of the "features" field.
        items:
          type: string
        type: array
      followers_count:
        description: FollowersCount holds the value of the "followers_count" field.
        type: integer
      following_count:
        description: FollowingCount holds the value of the "following_count" field.
        type: integer
      id:
        description: ID of the ent.
        type: string
      images:
        description: Images holds the value of the "images" field.
        items:
          type: string
        type: array
      latitude:
        description: Latitude holds the value of the "latitude" field.
        type: string
      likes_count:
        description: LikesCount holds the value of the "likes_count" field.
        type: integer
      location:
        description: Location holds the value of the "location" field.
        type: string
      longitude:
        description: Longitude holds the value of the "longitude" field.
        type: string
      map_coordinates:
        additionalProperties: true
        description: MapCoordinates holds the value of the "map_coordinates" field.
        type: object
      name:
        description: Name holds the value of the "name" field.
        type: string
      opening_hours:
        additionalProperties: true
        description: OpeningHours holds the value of the "opening_hours" field.
        type: object
      payment_options:
        additionalProperties: true
        description: PaymentOptions holds the value of the "payment_options" field.
        type: object
      phone:
        description: Phone holds the value of the "phone" field.
        type: string
      picture:
        description: Picture holds the value of the "picture" field.
        type: string
      place_settings:
        additionalProperties: true
        description: PlaceSettings holds the value of the "place_settings" field.
        type: object
      relevance_score:
        description: RelevanceScore holds the value of the "relevance_score" field.
        type: number
      search_text:
        description: SearchText holds the value of the "search_text" field.
        type: string
      social_media:
        additionalProperties: true
        description: SocialMedia holds the value of the "social_media" field.
        type: object
      special_offers:
        description: SpecialOffers holds the value of the "special_offers" field.
        type: string
      state:
        description: State holds the value of the "state" field.
        type: string
      sustainability_score:
        description: SustainabilityScore holds the value of the "sustainability_score"
          field.
        type: number
      tags:
        description: Tags holds the value of the "tags" field.
        items:
          type: string
        type: array
      type:
        description: Type holds the value of the "type" field.
        type: string
      website:
        description: Website holds the value of the "website" field.
        type: string
    type: object
  placio-app_ent.PlaceEdges:
    properties:
      amenities:
        description: Amenities holds the value of the amenities edge.
        items:
          $ref: '#/definitions/placio-app_ent.Amenity'
        type: array
      bookings:
        description: Bookings holds the value of the bookings edge.
        items:
          $ref: '#/definitions/placio-app_ent.Booking'
        type: array
      business:
        allOf:
        - $ref: '#/definitions/placio-app_ent.Business'
        description: Business holds the value of the business edge.
      categories:
        description: Categories holds the value of the categories edge.
        items:
          $ref: '#/definitions/placio-app_ent.Category'
        type: array
      categoryAssignments:
        description: CategoryAssignments holds the value of the categoryAssignments
          edge.
        items:
          $ref: '#/definitions/placio-app_ent.CategoryAssignment'
        type: array
      events:
        description: Events holds the value of the events edge.
        items:
          $ref: '#/definitions/placio-app_ent.Event'
        type: array
      faqs:
        description: Faqs holds the value of the faqs edge.
        items:
          $ref: '#/definitions/placio-app_ent.FAQ'
        type: array
      followerUsers:
        description: FollowerUsers holds the value of the followerUsers edge.
        items:
          $ref: '#/definitions/placio-app_ent.UserFollowPlace'
        type: array
      likedByUsers:
        description: LikedByUsers holds the value of the likedByUsers edge.
        items:
          $ref: '#/definitions/placio-app_ent.UserLikePlace'
        type: array
      menus:
        description: Menus holds the value of the menus edge.
        items:
          $ref: '#/definitions/placio-app_ent.Menu'
        type: array
      ratings:
        description: Ratings holds the value of the ratings edge.
        items:
          $ref: '#/definitions/placio-app_ent.Rating'
        type: array
      reservations:
        description: Reservations holds the value of the reservations edge.
        items:
          $ref: '#/definitions/placio-app_ent.Reservation'
        type: array
      reviews:
        description: Reviews holds the value of the reviews edge.
        items:
          $ref: '#/definitions/placio-app_ent.Review'
        type: array
      rooms:
        description: Rooms holds the value of the rooms edge.
        items:
          $ref: '#/definitions/placio-app_ent.Room'
        type: array
      users:
        description: Users holds the value of the users edge.
        items:
          $ref: '#/definitions/placio-app_ent.User'
        type: array
    type: object
  placio-app_ent.Post:
    properties:
      Content:
        description: Content holds the value of the "Content" field.
        type: string
      CreatedAt:
        description: CreatedAt holds the value of the "CreatedAt" field.
        type: string
      Privacy:
        allOf:
        - $ref: '#/definitions/placio-app_ent_post.Privacy'
        description: Privacy holds the value of the "Privacy" field.
      UpdatedAt:
        description: UpdatedAt holds the value of the "UpdatedAt" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/placio-app_ent.PostEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the PostQuery when eager-loading is set.
      id:
        description: ID of the ent.
        type: string
    type: object
  placio-app_ent.PostEdges:
    properties:
      business_account:
        allOf:
        - $ref: '#/definitions/placio-app_ent.Business'
        description: BusinessAccount holds the value of the business_account edge.
      categories:
        description: Categories holds the value of the categories edge.
        items:
          $ref: '#/definitions/placio-app_ent.Category'
        type: array
      comments:
        description: Comments holds the value of the comments edge.
        items:
          $ref: '#/definitions/placio-app_ent.Comment'
        type: array
      likes:
        description: Likes holds the value of the likes edge.
        items:
          $ref: '#/definitions/placio-app_ent.Like'
        type: array
      medias:
        description: Medias holds the value of the medias edge.
        items:
          $ref: '#/definitions/placio-app_ent.Media'
        type: array
      user:
        allOf:
        - $ref: '#/definitions/placio-app_ent.User'
        description: User holds the value of the user edge.
    type: object
  placio-app_ent.Rating:
    properties:
      edges:
        allOf:
        - $ref: '#/definitions/placio-app_ent.RatingEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the RatingQuery when eager-loading is set.
      id:
        description: ID of the ent.
        type: string
      ratedAt:
        description: When the rating was given.
        type: string
      review:
        description: User's review to the business/place/event.
        type: string
      score:
        description: Score should be between 1 and 5.
        type: integer
    type: object
  placio-app_ent.RatingEdges:
    properties:
      business:
        allOf:
        - $ref: '#/definitions/placio-app_ent.Business'
        description: The business that was rated.
      event:
        allOf:
        - $ref: '#/definitions/placio-app_ent.Event'
        description: The event that was rated.
      place:
        allOf:
        - $ref: '#/definitions/placio-app_ent.Place'
        description: The place that was rated.
      user:
        allOf:
        - $ref: '#/definitions/placio-app_ent.User'
        description: The user who gave the rating.
    type: object
  placio-app_ent.Reservation:
    properties:
      date:
        description: Date holds the value of the "date" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/placio-app_ent.ReservationEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the ReservationQuery when eager-loading is set.
      id:
        description: ID of the ent.
        type: string
      numberOfPeople:
        description: NumberOfPeople holds the value of the "numberOfPeople" field.
        type: integer
      status:
        description: Status holds the value of the "status" field.
        type: string
      time:
        description: Time holds the value of the "time" field.
        type: string
    type: object
  placio-app_ent.ReservationEdges:
    properties:
      place:
        allOf:
        - $ref: '#/definitions/placio-app_ent.Place'
        description: Place holds the value of the place edge.
      user:
        allOf:
        - $ref: '#/definitions/placio-app_ent.User'
        description: User holds the value of the user edge.
    type: object
  placio-app_ent.Review:
    properties:
      content:
        description: User's review to the business/place/event.
        type: string
      createdAt:
        description: When the review was created.
        type: string
      dislikeCount:
        description: Count of dislikes for this review.
        type: integer
      edges:
        allOf:
        - $ref: '#/definitions/placio-app_ent.ReviewEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the ReviewQuery when eager-loading is set.
      flag:
        description: Flag for this review.
        type: string
      id:
        description: ID of the ent.
        type: string
      likeCount:
        description: Count of likes for this review.
        type: integer
      score:
        description: Score should be between 1 and 5.
        type: number
    type: object
  placio-app_ent.ReviewEdges:
    properties:
      business:
        allOf:
        - $ref: '#/definitions/placio-app_ent.Business'
        description: The business that was reviewed.
      comments:
        description: The comments related to the review.
        items:
          $ref: '#/definitions/placio-app_ent.Comment'
        type: array
      event:
        allOf:
        - $ref: '#/definitions/placio-app_ent.Event'
        description: The event that was reviewed.
      likes:
        description: The likes related to the review.
        items:
          $ref: '#/definitions/placio-app_ent.Like'
        type: array
      medias:
        description: The media content related to the review.
        items:
          $ref: '#/definitions/placio-app_ent.Media'
        type: array
      place:
        allOf:
        - $ref: '#/definitions/placio-app_ent.Place'
        description: The place that was reviewed.
      user:
        allOf:
        - $ref: '#/definitions/placio-app_ent.User'
        description: The user who wrote the review.
    type: object
  placio-app_ent.Room:
    properties:
      availability:
        description: Availability holds the value of the "availability" field.
        type: boolean
      description:
        description: Description holds the value of the "description" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/placio-app_ent.RoomEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the RoomQuery when eager-loading is set.
      id:
        description: ID of the ent.
        type: string
      image:
        description: Image holds the value of the "image" field.
        type: string
      number:
        description: Number holds the value of the "number" field.
        type: string
      price:
        description: Price holds the value of the "price" field.
        type: number
      type:
        description: Type holds the value of the "type" field.
        type: string
    type: object
  placio-app_ent.RoomEdges:
    properties:
      bookings:
        description: Bookings holds the value of the bookings edge.
        items:
          $ref: '#/definitions/placio-app_ent.Booking'
        type: array
      place:
        allOf:
        - $ref: '#/definitions/placio-app_ent.Place'
        description: Place holds the value of the place edge.
    type: object
  placio-app_ent.Ticket:
    properties:
      createdAt:
        description: CreatedAt holds the value of the "createdAt" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/placio-app_ent.TicketEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the TicketQuery when eager-loading is set.
      id:
        description: ID of the ent.
        type: string
      updatedAt:
        description: UpdatedAt holds the value of the "updatedAt" field.
        type: string
    type: object
  placio-app_ent.TicketEdges:
    properties:
      event:
        allOf:
        - $ref: '#/definitions/placio-app_ent.Event'
        description: Event holds the value of the event edge.
      ticket_options:
        description: TicketOptions holds the value of the ticket_options edge.
        items:
          $ref: '#/definitions/placio-app_ent.TicketOption'
        type: array
    type: object
  placio-app_ent.TicketOption:
    properties:
      createdAt:
        description: CreatedAt holds the value of the "createdAt" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/placio-app_ent.TicketOptionEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the TicketOptionQuery when eager-loading is set.
      id:
        description: ID of the ent.
        type: string
      updatedAt:
        description: UpdatedAt holds the value of the "updatedAt" field.
        type: string
    type: object
  placio-app_ent.TicketOptionEdges:
    properties:
      event:
        allOf:
        - $ref: '#/definitions/placio-app_ent.Event'
        description: Event holds the value of the event edge.
    type: object
  placio-app_ent.User:
    properties:
      app_settings:
        additionalProperties: true
        description: AppSettings holds the value of the "app_settings" field.
        type: object
      auth0_data:
        allOf:
        - $ref: '#/definitions/management.User'
        description: Auth0Data holds the value of the "auth0_data" field.
      auth0_id:
        description: Auth0ID holds the value of the "auth0_id" field.
        type: string
      bio:
        description: Bio holds the value of the "bio" field.
        type: string
      cover_image:
        description: CoverImage holds the value of the "cover_image" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/placio-app_ent.UserEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the UserQuery when eager-loading is set.
      followers_count:
        description: FollowersCount holds the value of the "followers_count" field.
        type: integer
      following_count:
        description: FollowingCount holds the value of the "following_count" field.
        type: integer
      id:
        description: ID of the ent.
        type: string
      latitude:
        description: Latitude holds the value of the "latitude" field.
        type: string
      likes_count:
        description: LikesCount holds the value of the "likes_count" field.
        type: integer
      location:
        description: Location holds the value of the "location" field.
        type: string
      longitude:
        description: Longitude holds the value of the "longitude" field.
        type: string
      map_coordinates:
        additionalProperties: true
        description: MapCoordinates holds the value of the "map_coordinates" field.
        type: object
      name:
        description: Name holds the value of the "name" field.
        type: string
      picture:
        description: Picture holds the value of the "picture" field.
        type: string
      posts_count:
        description: PostsCount holds the value of the "posts_count" field.
        type: integer
      relevance_score:
        description: RelevanceScore holds the value of the "relevance_score" field.
        type: number
      reviews_count:
        description: ReviewsCount holds the value of the "reviews_count" field.
        type: integer
      search_text:
        description: SearchText holds the value of the "search_text" field.
        type: string
      user_settings:
        additionalProperties: true
        description: UserSettings holds the value of the "user_settings" field.
        type: object
      username:
        description: Username holds the value of the "username" field.
        type: string
      website:
        description: Website holds the value of the "website" field.
        type: string
    type: object
  placio-app_ent.UserBusiness:
    properties:
      edges:
        allOf:
        - $ref: '#/definitions/placio-app_ent.UserBusinessEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the UserBusinessQuery when eager-loading is set.
      id:
        description: ID of the ent.
        type: string
      permissions:
        description: Permissions holds the value of the "permissions" field.
        type: string
      role:
        description: Role holds the value of the "role" field.
        type: string
    type: object
  placio-app_ent.UserBusinessEdges:
    properties:
      business:
        allOf:
        - $ref: '#/definitions/placio-app_ent.Business'
        description: Business holds the value of the business edge.
      user:
        allOf:
        - $ref: '#/definitions/placio-app_ent.User'
        description: User holds the value of the user edge.
    type: object
  placio-app_ent.UserEdges:
    properties:
      bookings:
        description: Bookings holds the value of the bookings edge.
        items:
          $ref: '#/definitions/placio-app_ent.Booking'
        type: array
      categories:
        description: Categories holds the value of the categories edge.
        items:
          $ref: '#/definitions/placio-app_ent.Category'
        type: array
      categoryAssignments:
        description: CategoryAssignments holds the value of the categoryAssignments
          edge.
        items:
          $ref: '#/definitions/placio-app_ent.CategoryAssignment'
        type: array
      comments:
        description: Comments holds the value of the comments edge.
        items:
          $ref: '#/definitions/placio-app_ent.Comment'
        type: array
      followedBusinesses:
        description: FollowedBusinesses holds the value of the followedBusinesses
          edge.
        items:
          $ref: '#/definitions/placio-app_ent.UserFollowBusiness'
        type: array
      followedPlaces:
        description: FollowedPlaces holds the value of the followedPlaces edge.
        items:
          $ref: '#/definitions/placio-app_ent.UserFollowPlace'
        type: array
      followedUsers:
        description: FollowedUsers holds the value of the followedUsers edge.
        items:
          $ref: '#/definitions/placio-app_ent.UserFollowUser'
        type: array
      followerBusinesses:
        description: FollowerBusinesses holds the value of the followerBusinesses
          edge.
        items:
          $ref: '#/definitions/placio-app_ent.BusinessFollowUser'
        type: array
      followerUsers:
        description: FollowerUsers holds the value of the followerUsers edge.
        items:
          $ref: '#/definitions/placio-app_ent.UserFollowUser'
        type: array
      helps:
        description: Helps holds the value of the helps edge.
        items:
          $ref: '#/definitions/placio-app_ent.Help'
        type: array
      likedPlaces:
        description: LikedPlaces holds the value of the likedPlaces edge.
        items:
          $ref: '#/definitions/placio-app_ent.UserLikePlace'
        type: array
      likes:
        description: Likes holds the value of the likes edge.
        items:
          $ref: '#/definitions/placio-app_ent.Like'
        type: array
      ownedEvents:
        allOf:
        - $ref: '#/definitions/placio-app_ent.Event'
        description: OwnedEvents holds the value of the ownedEvents edge.
      places:
        description: Places holds the value of the places edge.
        items:
          $ref: '#/definitions/placio-app_ent.Place'
        type: array
      posts:
        description: Posts holds the value of the posts edge.
        items:
          $ref: '#/definitions/placio-app_ent.Post'
        type: array
      ratings:
        description: Ratings holds the value of the ratings edge.
        items:
          $ref: '#/definitions/placio-app_ent.Rating'
        type: array
      reservations:
        description: Reservations holds the value of the reservations edge.
        items:
          $ref: '#/definitions/placio-app_ent.Reservation'
        type: array
      reviews:
        description: Reviews holds the value of the reviews edge.
        items:
          $ref: '#/definitions/placio-app_ent.Review'
        type: array
      userBusinesses:
        description: UserBusinesses holds the value of the userBusinesses edge.
        items:
          $ref: '#/definitions/placio-app_ent.UserBusiness'
        type: array
      userFollowEvents:
        description: UserFollowEvents holds the value of the userFollowEvents edge.
        items:
          $ref: '#/definitions/placio-app_ent.UserFollowEvent'
        type: array
    type: object
  placio-app_ent.UserFollowBusiness:
    properties:
      CreatedAt:
        description: CreatedAt holds the value of the "CreatedAt" field.
        type: string
      UpdatedAt:
        description: UpdatedAt holds the value of the "UpdatedAt" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/placio-app_ent.UserFollowBusinessEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the UserFollowBusinessQuery when eager-loading is set.
      id:
        description: ID of the ent.
        type: string
    type: object
  placio-app_ent.UserFollowBusinessEdges:
    properties:
      business:
        allOf:
        - $ref: '#/definitions/placio-app_ent.Business'
        description: Business holds the value of the business edge.
      user:
        allOf:
        - $ref: '#/definitions/placio-app_ent.User'
        description: User holds the value of the user edge.
    type: object
  placio-app_ent.UserFollowEvent:
    properties:
      createdAt:
        description: CreatedAt holds the value of the "createdAt" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/placio-app_ent.UserFollowEventEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the UserFollowEventQuery when eager-loading is set.
      id:
        description: ID of the ent.
        type: string
      updatedAt:
        description: UpdatedAt holds the value of the "updatedAt" field.
        type: string
    type: object
  placio-app_ent.UserFollowEventEdges:
    properties:
      event:
        allOf:
        - $ref: '#/definitions/placio-app_ent.Event'
        description: Event holds the value of the event edge.
      user:
        allOf:
        - $ref: '#/definitions/placio-app_ent.User'
        description: User holds the value of the user edge.
    type: object
  placio-app_ent.UserFollowPlace:
    properties:
      CreatedAt:
        description: CreatedAt holds the value of the "CreatedAt" field.
        type: string
      UpdatedAt:
        description: UpdatedAt holds the value of the "UpdatedAt" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/placio-app_ent.UserFollowPlaceEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the UserFollowPlaceQuery when eager-loading is set.
      id:
        description: ID of the ent.
        type: string
    type: object
  placio-app_ent.UserFollowPlaceEdges:
    properties:
      place:
        allOf:
        - $ref: '#/definitions/placio-app_ent.Place'
        description: Place holds the value of the place edge.
      user:
        allOf:
        - $ref: '#/definitions/placio-app_ent.User'
        description: User holds the value of the user edge.
    type: object
  placio-app_ent.UserFollowUser:
    properties:
      CreatedAt:
        description: CreatedAt holds the value of the "CreatedAt" field.
        type: string
      UpdatedAt:
        description: UpdatedAt holds the value of the "UpdatedAt" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/placio-app_ent.UserFollowUserEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the UserFollowUserQuery when eager-loading is set.
      id:
        description: ID of the ent.
        type: string
    type: object
  placio-app_ent.UserFollowUserEdges:
    properties:
      followed:
        allOf:
        - $ref: '#/definitions/placio-app_ent.User'
        description: Followed holds the value of the followed edge.
      follower:
        allOf:
        - $ref: '#/definitions/placio-app_ent.User'
        description: Follower holds the value of the follower edge.
    type: object
  placio-app_ent.UserLikePlace:
    properties:
      CreatedAt:
        description: CreatedAt holds the value of the "CreatedAt" field.
        type: string
      UpdatedAt:
        description: UpdatedAt holds the value of the "UpdatedAt" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/placio-app_ent.UserLikePlaceEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the UserLikePlaceQuery when eager-loading is set.
      id:
        description: ID of the ent.
        type: string
    type: object
  placio-app_ent.UserLikePlaceEdges:
    properties:
      place:
        allOf:
        - $ref: '#/definitions/placio-app_ent.Place'
        description: Place holds the value of the place edge.
      user:
        allOf:
        - $ref: '#/definitions/placio-app_ent.User'
        description: User holds the value of the user edge.
    type: object
  placio-app_ent_event.EventType:
    enum:
    - event
    - place
    - business
    - free
    - paid
    type: string
    x-enum-varnames:
    - EventTypeEvent
    - EventTypePlace
    - EventTypeBusiness
    - EventTypeFree
    - EventTypePaid
  placio-app_ent_event.Frequency:
    enum:
    - once
    - daily
    - weekly
    - monthly
    - yearly
    type: string
    x-enum-varnames:
    - FrequencyOnce
    - FrequencyDaily
    - FrequencyWeekly
    - FrequencyMonthly
    - FrequencyYearly
  placio-app_ent_event.VenueType:
    enum:
    - online
    - in_person
    - hybrid
    type: string
    x-enum-varnames:
    - VenueTypeOnline
    - VenueTypeInPerson
    - VenueTypeHybrid
  placio-app_ent_post.Privacy:
    enum:
    - Public
    - Public
    - FollowersOnly
    - OnlyMe
    type: string
    x-enum-varnames:
    - DefaultPrivacy
    - PrivacyPublic
    - PrivacyFollowersOnly
    - PrivacyOnlyMe
  placio-app_models.AccountSettings:
    properties:
      accountID:
        type: string
      blockedUsers:
        items:
          type: string
        type: array
      businessAccountID:
        type: string
      id:
        type: string
      mutedUsers:
        items:
          type: string
        type: array
      twoFactorAuthentication:
        type: boolean
    type: object
  placio-app_models.AppMetadata:
    properties:
      CommentNotifications:
        type: boolean
      DirectMessageNotifications:
        type: boolean
      EmailNotifications:
        type: boolean
      FollowNotifications:
        type: boolean
      LikeNotifications:
        type: boolean
      MentionNotifications:
        type: boolean
      PushNotifications:
        type: boolean
    type: object
  placio-app_models.Attendee:
    properties:
      attended:
        type: boolean
      createdAt:
        type: string
      eventID:
        type: string
      id:
        type: string
      ticketID:
        type: string
      updatedAt:
        type: string
      userID:
        type: string
    type: object
  placio-app_models.Auth0UserData:
    properties:
      app_metadata:
        $ref: '#/definitions/placio-app_models.AppMetadata'
      blocked:
        type: boolean
      client_id:
        type: string
      connection:
        type: string
      email:
        type: string
      email_verified:
        type: boolean
      family_name:
        type: string
      given_name:
        type: string
      name:
        type: string
      nickname:
        type: string
      password:
        type: string
      phone_number:
        type: string
      phone_verified:
        type: boolean
      picture:
        type: string
      user_metadata:
        $ref: '#/definitions/placio-app_models.Metadata'
      username:
        type: string
      verify_email:
        type: boolean
      verify_phone_number:
        type: boolean
    type: object
  placio-app_models.BusinessAccount:
    properties:
      accountSettings:
        $ref: '#/definitions/placio-app_models.AccountSettings'
      active:
        type: boolean
      createdAt:
        type: string
      deleteAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        description: gorm.Model
        type: string
      name:
        type: string
      posts:
        items:
          $ref: '#/definitions/placio-app_models.Post'
        type: array
      relationships:
        items:
          $ref: '#/definitions/placio-app_models.UserBusinessRelationship'
        type: array
      updatedAt:
        type: string
    type: object
  placio-app_models.Comment:
    properties:
      content:
        type: string
      createdAt:
        type: string
      id:
        type: string
      postID:
        type: string
      updatedAt:
        type: string
      userID:
        type: string
    type: object
  placio-app_models.Content:
    properties:
      AutoplayVideos:
        type: boolean
      DefaultPostPrivacy:
        type: string
      DisplaySensitiveMedia:
        type: boolean
      ExplicitContentFilter:
        type: string
      MediaVisibility:
        type: string
    type: object
  placio-app_models.Like:
    properties:
      createdAt:
        type: string
      id:
        type: string
      postID:
        type: string
      updatedAt:
        type: string
      userId:
        type: string
    type: object
  placio-app_models.Media:
    properties:
      createdAt:
        type: string
      id:
        type: string
      mediaType:
        description: '"image", "gif", or "video"'
        type: string
      postID:
        type: string
      updatedAt:
        type: string
      url:
        type: string
    type: object
  placio-app_models.Metadata:
    properties:
      Content:
        $ref: '#/definitions/placio-app_models.Content'
      CreatedAt:
        type: string
      DeletedAt: {}
      Language:
        type: string
      Privacy:
        type: string
      Theme:
        type: string
      UpdatedAt:
        type: string
    type: object
  placio-app_models.Post:
    properties:
      businessAccountID:
        type: string
      comments:
        items:
          $ref: '#/definitions/placio-app_models.Comment'
        type: array
      content:
        type: string
      createdAt:
        type: string
      id:
        type: string
      likes:
        items:
          $ref: '#/definitions/placio-app_models.Like'
        type: array
      medias:
        items:
          $ref: '#/definitions/placio-app_models.Media'
        type: array
      updatedAt:
        type: string
      userID:
        description: AccountID string    `gorm:"index;foreignKey:ID"`
        type: string
    type: object
  placio-app_models.Rating:
    properties:
      createdAt:
        type: string
      eventID:
        type: string
      id:
        type: string
      review:
        type: string
      score:
        type: integer
      updatedAt:
        type: string
      userID:
        type: string
    type: object
  placio-app_models.Ticket:
    properties:
      attendees:
        items:
          $ref: '#/definitions/placio-app_models.Attendee'
        type: array
      createdAt:
        type: string
      eventID:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: integer
      ratings:
        description: Comments      []Comment      `gorm:"foreignKey:EventID"`
        items:
          $ref: '#/definitions/placio-app_models.Rating'
        type: array
      ticketOptions:
        items:
          $ref: '#/definitions/placio-app_models.TicketOption'
        type: array
      updatedAt:
        type: string
    type: object
  placio-app_models.TicketOption:
    properties:
      createdAt:
        type: string
      eventID:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
      updatedAt:
        type: string
    type: object
  placio-app_models.User:
    properties:
      auth0Data:
        $ref: '#/definitions/management.User'
      auth0ID:
        type: string
      createdAt:
        type: string
      deleteAt:
        $ref: '#/definitions/gorm.DeletedAt'
      posts:
        items:
          $ref: '#/definitions/placio-app_models.Post'
        type: array
      relationships:
        items:
          $ref: '#/definitions/placio-app_models.UserBusinessRelationship'
        type: array
      updatedAt:
        type: string
      userID:
        description: gorm.Model
        type: string
    type: object
  placio-app_models.UserBusinessRelationship:
    properties:
      businessAccount:
        $ref: '#/definitions/placio-app_models.BusinessAccount'
      businessAccountID:
        type: string
      createdAt:
        type: string
      deleteAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: string
      role:
        type: string
      updatedAt:
        type: string
      user:
        $ref: '#/definitions/placio-app_models.User'
      userID:
        type: string
    type: object
host: https://api.palnight.com
info:
  contact:
    email: support@placio.io
    name: Placio Ltd
    url: https://placio.io
  description: This is the documentation for the Placio Application Api
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://placio.io/terms
  title: Placio Application Api
  version: "0.01"
paths:
  /api/v1/amenities:
    get:
      consumes:
      - application/json
      description: Get all amenities
      parameters:
      - description: JWT token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved amenities
          schema:
            items:
              $ref: '#/definitions/placio-app_ent.Amenity'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Get all amenities
      tags:
      - Amenity
    post:
      consumes:
      - application/json
      description: Create a new amenity with provided information
      parameters:
      - description: Icon files for amenity
        in: formData
        name: icons
        required: true
        type: file
      - description: Amenity information
        in: body
        name: amenity
        required: true
        schema:
          $ref: '#/definitions/placio-app_Dto.CreateAmenityInput'
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created amenity
          schema:
            $ref: '#/definitions/placio-app_ent.Amenity'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Create a new amenity
      tags:
      - Amenity
  /api/v1/amenities/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an amenity by ID
      parameters:
      - description: ID of the amenity to delete
        in: path
        name: id
        required: true
        type: string
      - description: JWT token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted amenity
          schema:
            type: string
        "404":
          description: Amenity not found
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Delete an amenity
      tags:
      - Amenity
    get:
      consumes:
      - application/json
      description: Get an amenity by ID
      parameters:
      - description: ID of the amenity
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved amenity
          schema:
            $ref: '#/definitions/placio-app_ent.Amenity'
        "404":
          description: Amenity not found
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Get an amenity
      tags:
      - Amenity
    put:
      consumes:
      - application/json
      description: Update an amenity by ID
      parameters:
      - description: ID of the amenity to update
        in: path
        name: id
        required: true
        type: string
      - description: New icon file for amenity
        in: formData
        name: icon
        required: true
        type: file
      - description: New amenity information
        in: body
        name: amenity
        required: true
        schema:
          $ref: '#/definitions/placio-app_Dto.UpdateAmenityInput'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated amenity
          schema:
            $ref: '#/definitions/placio-app_ent.Amenity'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "404":
          description: Amenity not found
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Update an amenity
      tags:
      - Amenity
  /api/v1/attendees/:
    post:
      consumes:
      - application/json
      description: Add an attendee to the specified event
      parameters:
      - description: Attendee Data
        in: body
        name: AddAttendeeDto
        required: true
        schema:
          $ref: '#/definitions/placio-app_models.Attendee'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully added attendee
          schema:
            $ref: '#/definitions/placio-app_models.Attendee'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Add attendee to an event
      tags:
      - Attendee
  /api/v1/attendees/{id}:
    delete:
      consumes:
      - application/json
      description: Remove an attendee from the specified event by their ID
      parameters:
      - description: Attendee ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Successfully removed attendee
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "404":
          description: Attendee Not Found
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Remove attendee from an event
      tags:
      - Attendee
    get:
      consumes:
      - application/json
      description: Get attendee details by their ID
      parameters:
      - description: Attendee ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved attendee
          schema:
            $ref: '#/definitions/placio-app_models.Attendee'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "404":
          description: Attendee Not Found
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Get attendee by ID
      tags:
      - Attendee
    put:
      consumes:
      - application/json
      description: Update an attendee's details by their ID
      parameters:
      - description: Attendee ID
        in: path
        name: id
        required: true
        type: string
      - description: Attendee Data
        in: body
        name: UpdateAttendeeDto
        required: true
        schema:
          $ref: '#/definitions/placio-app_models.Attendee'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated attendee
          schema:
            $ref: '#/definitions/placio-app_models.Attendee'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "404":
          description: Attendee Not Found
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Update attendee details
      tags:
      - Attendee
  /api/v1/bookings/:
    post:
      consumes:
      - application/json
      description: Create a new booking
      parameters:
      - description: Booking data
        in: body
        name: booking
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created booking
          schema:
            $ref: '#/definitions/placio-app_ent.Booking'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Create a booking
      tags:
      - Booking
  /api/v1/bookings/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a booking by its ID
      parameters:
      - description: ID of the booking
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted booking
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Delete a booking
      tags:
      - Booking
    get:
      consumes:
      - application/json
      description: Get a booking by its ID
      parameters:
      - description: ID of the booking
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved booking
          schema:
            $ref: '#/definitions/placio-app_ent.Booking'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Get a booking
      tags:
      - Booking
    patch:
      consumes:
      - application/json
      description: Update a booking by its ID
      parameters:
      - description: ID of the booking
        in: path
        name: id
        required: true
        type: string
      - description: Booking data
        in: body
        name: booking
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated booking
          schema:
            $ref: '#/definitions/placio-app_ent.Booking'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Update a booking
      tags:
      - Booking
  /api/v1/business/:
    patch:
      consumes:
      - application/json
      description: Get a business's details by ID
      parameters:
      - description: Business ID
        in: path
        name: id
        required: true
        type: string
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved business
          schema:
            $ref: '#/definitions/placio-app_ent.Business'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Update a business's details
      tags:
      - Business
  /api/v1/comments/:postId:
    post:
      responses:
        "201":
          description: Successfully created comment
          schema:
            $ref: '#/definitions/placio-app_Dto.CommentResponseDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
  /api/v1/comments/{id}:
    delete:
      responses:
        "204":
          description: Successfully deleted comment
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "404":
          description: Comment Not Found
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
    put:
      responses:
        "200":
          description: Successfully updated comment
          schema:
            $ref: '#/definitions/placio-app_Dto.CommentResponseDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "404":
          description: Comment Not Found
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
  /api/v1/events/{eventId}/attendees:
    get:
      consumes:
      - application/json
      description: Get all attendees for a specific event by event ID
      parameters:
      - description: Event ID
        in: path
        name: eventId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved attendees
          schema:
            items:
              $ref: '#/definitions/placio-app_models.Attendee'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Get attendees by event
      tags:
      - Attendee
  /api/v1/events/{eventId}/ticket-options:
    get:
      consumes:
      - application/json
      description: GET all ticket options for an event by its ID
      parameters:
      - description: Event ID
        in: path
        name: eventId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved ticket options for event
          schema:
            items:
              $ref: '#/definitions/placio-app_models.TicketOption'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: GET ticket options by event ID
      tags:
      - TicketOption
  /api/v1/health:
    get:
      consumes:
      - '*/*'
      description: get the status of server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Show the status of server.
      tags:
      - root
  /api/v1/helps:
    post:
      consumes:
      - application/json
      description: Create a new help request
      parameters:
      - description: ID of the user creating the help request
        in: body
        name: userID
        required: true
        schema:
          type: string
      - description: Category of the help request
        in: body
        name: category
        required: true
        schema:
          type: string
      - description: Subject of the help request
        in: body
        name: subject
        required: true
        schema:
          type: string
      - description: Body of the help request
        in: body
        name: body
        required: true
        schema:
          type: string
      - description: Optional media associated with the help request
        in: body
        name: media
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created help request
          schema:
            $ref: '#/definitions/placio-app_ent.Help'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Create a help request
      tags:
      - Help
  /api/v1/helps/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing help request
      parameters:
      - description: ID of the help request to delete
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted help request
          schema:
            $ref: '#/definitions/placio-app_Dto.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Delete a help request
      tags:
      - Help
  /api/v1/helps/{id}/resolve:
    patch:
      consumes:
      - application/json
      description: Resolve an existing help request
      parameters:
      - description: ID of the help request to resolve
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully resolved help request
          schema:
            $ref: '#/definitions/placio-app_ent.Help'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Resolve a help request
      tags:
      - Help
  /api/v1/likes/{likeID}:
    delete:
      consumes:
      - application/json
      description: Remove a like from a post
      parameters:
      - description: ID of the like
        in: path
        name: likeID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully unliked post
          schema:
            $ref: '#/definitions/placio-app_Dto.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Unlike a post
      tags:
      - Like
  /api/v1/likes/place/{placeID}:
    get:
      consumes:
      - application/json
      description: Retrieve all likes for a place
      parameters:
      - description: ID of the place
        in: path
        name: placeID
        required: true
        type: string
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of UserLikePlace records
          schema:
            items:
              $ref: '#/definitions/placio-app_ent.UserLikePlace'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Get place likes
      tags:
      - Like
    post:
      consumes:
      - application/json
      description: Allows a user to like a specific place
      parameters:
      - description: ID of the user
        in: path
        name: userID
        required: true
        type: string
      - description: ID of the place
        in: path
        name: placeID
        required: true
        type: string
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Successfully liked place
          schema:
            $ref: '#/definitions/placio-app_ent.UserLikePlace'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Like a place
      tags:
      - Like
  /api/v1/likes/place/{userLikePlaceID}:
    delete:
      consumes:
      - application/json
      description: Allows a user to unlike a specific place
      parameters:
      - description: ID of the UserLikePlace record
        in: path
        name: userLikePlaceID
        required: true
        type: string
      - description: Provide JWT access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully unliked place
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Unlike a place
      tags:
      - Like
  /api/v1/likes/post/{postID}:
    get:
      consumes:
      - application/json
      description: Retrieve all likes for a post
      parameters:
      - description: ID of the post
        in: path
        name: postID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of likes
          schema:
            items:
              $ref: '#/definitions/placio-app_ent.Like'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Get post likes
      tags:
      - Like
  /api/v1/likes/user/{userID}:
    get:
      consumes:
      - application/json
      description: Retrieve all likes by a user
      parameters:
      - description: ID of the user
        in: path
        name: userID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of likes
          schema:
            items:
              $ref: '#/definitions/placio-app_ent.Like'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Get user likes
      tags:
      - Like
  /api/v1/likes/user/{userID}/post/{postID}:
    post:
      consumes:
      - application/json
      description: Add a like to a post by a user
      parameters:
      - description: ID of the user
        in: path
        name: userID
        required: true
        type: string
      - description: ID of the post
        in: path
        name: postID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully liked post
          schema:
            $ref: '#/definitions/placio-app_Dto.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Like a post
      tags:
      - Like
  /api/v1/likes/user/place/{userID}:
    get:
      consumes:
      - application/json
      description: Retrieve all places liked by a user
      parameters:
      - description: ID of the user
        in: path
        name: userID
        required: true
        type: string
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of UserLikePlace records
          schema:
            items:
              $ref: '#/definitions/placio-app_ent.UserLikePlace'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Get user liked places
      tags:
      - Like
  /api/v1/media/:
    post:
      consumes:
      - multipart/form-data
      description: Upload a media file (image, gif, or video) for a post
      parameters:
      - description: Media file
        in: formData
        name: file
        required: true
        type: file
      - description: Post ID
        in: formData
        name: postID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Successfully uploaded media
          schema:
            $ref: '#/definitions/placio-app_ent.Media'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Upload media
      tags:
      - Media
  /api/v1/menus/:
    post:
      consumes:
      - application/json
      description: Create a new menu
      parameters:
      - description: Menu data
        in: body
        name: menu
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created menu
          schema:
            $ref: '#/definitions/placio-app_ent.Menu'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Create a menu
      tags:
      - Menu
  /api/v1/menus/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a menu by its ID
      parameters:
      - description: ID of the menu
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted menu
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Delete a menu
      tags:
      - Menu
    get:
      consumes:
      - application/json
      description: Get a menu by its ID
      parameters:
      - description: ID of the menu
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved menu
          schema:
            $ref: '#/definitions/placio-app_ent.Menu'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Get a menu
      tags:
      - Menu
    patch:
      consumes:
      - application/json
      description: Update a menu by its ID
      parameters:
      - description: ID of the menu
        in: path
        name: id
        required: true
        type: string
      - description: Menu data
        in: body
        name: menu
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated menu
          schema:
            $ref: '#/definitions/placio-app_ent.Menu'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Update a menu
      tags:
      - Menu
  /api/v1/places/:
    post:
      consumes:
      - application/json
      description: Create a new place
      parameters:
      - description: Place to create
        in: body
        name: place
        required: true
        schema:
          $ref: '#/definitions/placio-app_Dto.CreatePlaceDTO'
      - description: ID of the business to create the place for
        in: query
        name: business_id
        required: true
        type: string
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created place
          schema:
            $ref: '#/definitions/placio-app_ent.Place'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Create a place
      tags:
      - Place
  /api/v1/places/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a place by ID
      parameters:
      - description: ID of the place to delete
        in: path
        name: id
        required: true
        type: string
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted place
          schema:
            $ref: '#/definitions/placio-app_ent.Place'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Delete a place
      tags:
      - Place
    get:
      consumes:
      - application/json
      description: Get a place by ID
      parameters:
      - description: ID of the place to get
        in: path
        name: id
        required: true
        type: string
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved place
          schema:
            $ref: '#/definitions/placio-app_ent.Place'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Get a place
      tags:
      - Place
    patch:
      consumes:
      - application/json
      description: Update a place by ID
      parameters:
      - description: ID of the place to update
        in: path
        name: id
        required: true
        type: string
      - description: Place data to update
        in: body
        name: place
        required: true
        schema:
          $ref: '#/definitions/placio-app_Dto.UpdatePlaceDTO'
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated place
          schema:
            $ref: '#/definitions/placio-app_ent.Place'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Update a place
      tags:
      - Place
  /api/v1/places/{id}/amenities:
    post:
      consumes:
      - application/json
      description: Add amenities to a place by ID
      parameters:
      - description: ID of the place to add amenities to
        in: path
        name: id
        required: true
        type: string
      - description: Amenities to add
        in: body
        name: amenity
        required: true
        schema:
          $ref: '#/definitions/placio-app_Dto.AmenityAdditionDTO'
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully added amenities to place
          schema:
            $ref: '#/definitions/placio-app_ent.Place'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Add amenities to a place
      tags:
      - Place
  /api/v1/places/all:
    get:
      consumes:
      - application/json
      description: Get all places
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved all places
          schema:
            items:
              items:
                $ref: '#/definitions/placio-app_ent.Place'
              type: array
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Get all places
      tags:
      - Place
  /api/v1/posts/:
    post:
      consumes:
      - application/json
      description: Create a new post for the authenticated user
      parameters:
      - description: Post Data
        in: body
        name: CreatePostDto
        required: true
        schema:
          $ref: '#/definitions/placio-app_Dto.PostDto'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created post
          schema:
            $ref: '#/definitions/placio-app_Dto.PostResponseDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Create a new post
      tags:
      - Post
  /api/v1/posts/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing post
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted post
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "404":
          description: Post Not Found
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Delete a post
      tags:
      - Post
    get:
      consumes:
      - application/json
      description: Get a post by ID
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved post
          schema:
            $ref: '#/definitions/placio-app_ent.Post'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Get a post
      tags:
      - Post
    put:
      consumes:
      - application/json
      description: Update an existing post
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: string
      - description: Post Data
        in: body
        name: UpdatePostDto
        required: true
        schema:
          $ref: '#/definitions/placio-app_Dto.PostDto'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated post
          schema:
            $ref: '#/definitions/placio-app_Dto.PostResponseDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "404":
          description: Post Not Found
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Update a post
      tags:
      - Post
  /api/v1/posts/{id}/comments:
    get:
      consumes:
      - application/json
      description: Retrieve all comments for a given post
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved comments
          schema:
            items:
              $ref: '#/definitions/placio-app_ent.Comment'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "404":
          description: Post Not Found
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Get comments by post
      tags:
      - Post
  /api/v1/ratings:
    get:
      consumes:
      - application/json
      description: Retrieve all ratings
      parameters:
      - description: JWT Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved ratings
          schema:
            items:
              $ref: '#/definitions/placio-app_ent.Rating'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: GET all ratings
      tags:
      - Rating
  /api/v1/ratings/:
    post:
      consumes:
      - application/json
      description: Create a new rating for the specified event
      parameters:
      - description: JWT Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Rating Data
        in: body
        name: Dto.RatingDTO
        required: true
        schema:
          $ref: '#/definitions/placio-app_Dto.RatingDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created rating
          schema:
            $ref: '#/definitions/placio-app_ent.Rating'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Create a new rating
      tags:
      - Rating
  /api/v1/ratings/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a rating by its ID
      parameters:
      - description: JWT Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Rating ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Successfully deleted rating
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "404":
          description: Rating Not Found
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Delete rating by ID
      tags:
      - Rating
    get:
      consumes:
      - application/json
      description: Retrieve a rating by its ID
      parameters:
      - description: JWT Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Rating ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved rating
          schema:
            $ref: '#/definitions/placio-app_ent.Rating'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "404":
          description: Rating Not Found
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: GET rating by ID
      tags:
      - Rating
    put:
      consumes:
      - application/json
      description: Update a rating by its ID
      parameters:
      - description: JWT Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Rating ID
        in: path
        name: id
        required: true
        type: string
      - description: New Score
        in: body
        name: score
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated rating
          schema:
            $ref: '#/definitions/placio-app_ent.Rating'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "404":
          description: Rating Not Found
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Update rating by ID
      tags:
      - Rating
  /api/v1/reservations/:
    post:
      responses:
        "200":
          description: Successfully created reservation
          schema:
            $ref: '#/definitions/placio-app_ent.Reservation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
  /api/v1/reservations/{id}:
    delete:
      responses:
        "200":
          description: Successfully deleted reservation
          schema:
            $ref: '#/definitions/placio-app_ent.Reservation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
    get:
      responses:
        "200":
          description: Successfully retrieved reservation
          schema:
            $ref: '#/definitions/placio-app_ent.Reservation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
    patch:
      responses:
        "200":
          description: Successfully updated reservation
          schema:
            $ref: '#/definitions/placio-app_ent.Reservation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
  /api/v1/rooms/:
    post:
      consumes:
      - application/json
      description: Create a new room
      parameters:
      - description: Room data
        in: body
        name: room
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created room
          schema:
            $ref: '#/definitions/placio-app_ent.Room'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Create a room
      tags:
      - Room
  /api/v1/rooms/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a room by its ID
      parameters:
      - description: ID of the room
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted room
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Delete a room
      tags:
      - Room
    get:
      consumes:
      - application/json
      description: Get a room by its ID
      parameters:
      - description: ID of the room
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved room
          schema:
            $ref: '#/definitions/placio-app_ent.Room'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Get a room
      tags:
      - Room
    patch:
      consumes:
      - application/json
      description: Update a room by its ID
      parameters:
      - description: ID of the room
        in: path
        name: id
        required: true
        type: string
      - description: Room data
        in: body
        name: room
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated room
          schema:
            $ref: '#/definitions/placio-app_ent.Room'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Update a room
      tags:
      - Room
  /api/v1/search:
    get:
      consumes:
      - application/json
      description: Search for Users, Places, Events, and Businesses
      parameters:
      - description: Text to search for
        in: query
        name: searchText
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully found search results
          schema:
            $ref: '#/definitions/placio-app_Dto.SearchResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Full-text search
      tags:
      - Search
  /api/v1/search/businesses:
    get:
      consumes:
      - application/json
      description: Search for Businesses by a given search text
      parameters:
      - description: Text to search for
        in: query
        name: searchText
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully found search results
          schema:
            items:
              $ref: '#/definitions/placio-app_ent.Business'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Search for Businesses
      tags:
      - Search
  /api/v1/search/db:
    get:
      consumes:
      - application/json
      description: Search for Users, Places, Events, and Businesses
      parameters:
      - description: Type of search - user, place, event, business
        in: query
        name: type
        type: string
      - description: Text to search for
        in: query
        name: searchText
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully found search results
          schema:
            $ref: '#/definitions/placio-app_Dto.SearchResponses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Search DB
      tags:
      - Search
  /api/v1/search/events:
    get:
      consumes:
      - application/json
      description: Search for Events by a given search text
      parameters:
      - description: Text to search for
        in: query
        name: searchText
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully found search results
          schema:
            items:
              $ref: '#/definitions/placio-app_ent.Event'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Search for Events
      tags:
      - Search
  /api/v1/search/places:
    get:
      consumes:
      - application/json
      description: Search for Places by a given search text
      parameters:
      - description: Text to search for
        in: query
        name: searchText
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully found search results
          schema:
            items:
              $ref: '#/definitions/placio-app_ent.Place'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Search for Places
      tags:
      - Search
  /api/v1/search/users:
    get:
      consumes:
      - application/json
      description: Search for Users by a given search text
      parameters:
      - description: Text to search for
        in: query
        name: searchText
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully found search results
          schema:
            items:
              $ref: '#/definitions/placio-app_ent.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Search for Users
      tags:
      - Search
  /api/v1/ticket-options/:
    post:
      consumes:
      - application/json
      description: Create a new ticket option for the specified event
      parameters:
      - description: Ticket Option Data
        in: body
        name: CreateTicketOptionDto
        required: true
        schema:
          $ref: '#/definitions/placio-app_models.TicketOption'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created ticket option
          schema:
            $ref: '#/definitions/placio-app_models.TicketOption'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Create a new ticket option
      tags:
      - TicketOption
  /api/v1/ticket-options/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a ticket option by its ID
      parameters:
      - description: Ticket Option ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Successfully deleted ticket option
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "404":
          description: Ticket Option Not Found
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Delete ticket option by ID
      tags:
      - TicketOption
    get:
      consumes:
      - application/json
      description: GET a ticket option by its ID
      parameters:
      - description: Ticket Option ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved ticket option
          schema:
            $ref: '#/definitions/placio-app_models.TicketOption'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "404":
          description: Ticket Option Not Found
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: GET ticket option by ID
      tags:
      - TicketOption
    put:
      consumes:
      - application/json
      description: Update a ticket option by its ID
      parameters:
      - description: Ticket Option ID
        in: path
        name: id
        required: true
        type: string
      - description: Ticket Option Data
        in: body
        name: UpdateTicketOptionDto
        required: true
        schema:
          $ref: '#/definitions/placio-app_models.TicketOption'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated ticket option
          schema:
            $ref: '#/definitions/placio-app_models.TicketOption'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "404":
          description: Ticket Option Not Found
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Update ticket option by ID
      tags:
      - TicketOption
  /api/v1/tickets/:
    post:
      consumes:
      - application/json
      description: Create a new ticket for the specified event
      parameters:
      - description: Ticket Data
        in: body
        name: CreateTicketDto
        required: true
        schema:
          $ref: '#/definitions/placio-app_models.Ticket'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created ticket
          schema:
            $ref: '#/definitions/placio-app_models.Ticket'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Create a new ticket
      tags:
      - Ticket
  /api/v1/tickets/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a ticket by its ID
      parameters:
      - description: Ticket ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Successfully deleted ticket
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "404":
          description: Ticket Not Found
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Delete ticket by ID
      tags:
      - Ticket
    get:
      consumes:
      - application/json
      description: GET a ticket by its ID
      parameters:
      - description: Ticket ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved ticket
          schema:
            $ref: '#/definitions/placio-app_models.Ticket'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "404":
          description: Ticket Not Found
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: GET ticket by ID
      tags:
      - Ticket
  /api/v1/tickets/event/{eventId}:
    get:
      consumes:
      - application/json
      description: GET all tickets for a specific event
      parameters:
      - description: Event ID
        in: path
        name: eventId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved tickets
          schema:
            items:
              $ref: '#/definitions/placio-app_models.Ticket'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: GET tickets by event ID
      tags:
      - Ticket
  /api/v1/users/:
    get:
      consumes:
      - application/json
      description: Get a user's details by their Auth0 ID
      parameters:
      - description: User Auth0 ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved user
          schema:
            $ref: '#/definitions/placio-app_ent.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Get a user's details
      tags:
      - User
    patch:
      consumes:
      - application/json
      description: Get a user's details by their Auth0 ID
      parameters:
      - description: User Auth0 ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved user
          schema:
            $ref: '#/definitions/placio-app_ent.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Update a user's details
      tags:
      - User
  /api/v1/users/{followerID}/follow/business/{businessID}:
    post:
      consumes:
      - application/json
      description: Follow a business by its ID
      parameters:
      - description: ID of the follower
        in: path
        name: followerID
        required: true
        type: string
      - description: ID of the business to follow
        in: path
        name: businessID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully followed business
          schema:
            $ref: '#/definitions/placio-app_Dto.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Follow a business
      tags:
      - User
  /api/v1/users/{followerID}/follow/user/{followedID}:
    post:
      consumes:
      - application/json
      description: Follow a user by their ID
      parameters:
      - description: ID of the follower
        in: path
        name: followerID
        required: true
        type: string
      - description: ID of the user to follow
        in: path
        name: followedID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully followed user
          schema:
            $ref: '#/definitions/placio-app_Dto.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Follow a user
      tags:
      - User
  /api/v1/users/{followerID}/unfollow/business/{businessID}:
    delete:
      consumes:
      - application/json
      description: Unfollow a business by its ID
      parameters:
      - description: ID of the follower
        in: path
        name: followerID
        required: true
        type: string
      - description: ID of the business to unfollow
        in: path
        name: businessID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully unfollowed business
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Unfollow a business
      tags:
      - User
  /api/v1/users/{followerID}/unfollow/user/{followedID}:
    delete:
      consumes:
      - application/json
      description: Unfollow a user by their ID
      parameters:
      - description: ID of the follower
        in: path
        name: followerID
        required: true
        type: string
      - description: ID of the user to unfollow
        in: path
        name: followedID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully unfollowed user
          schema:
            $ref: '#/definitions/placio-app_Dto.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Unfollow a user
      tags:
      - User
  /api/v1/users/{id}/appdata:
    patch:
      consumes:
      - application/json
      description: Update a user's app metadata by their Auth0 ID
      parameters:
      - description: User Auth0 ID
        in: path
        name: id
        required: true
        type: string
      - description: App metadata to update
        in: body
        name: appData
        required: true
        schema:
          $ref: '#/definitions/placio-app_models.AppMetadata'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated app metadata
          schema:
            $ref: '#/definitions/placio-app_ent.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Update a user's app metadata
      tags:
      - User
  /api/v1/users/{id}/business-accounts:
    get:
      consumes:
      - application/json
      description: Get all business accounts associated with a specific user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved business accounts
          schema:
            items:
              $ref: '#/definitions/placio-app_ent.Business'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Get all business accounts for a user
      tags:
      - User
  /api/v1/users/{id}/metadata:
    patch:
      consumes:
      - application/json
      description: Update a user's metadata by their Auth0 ID
      parameters:
      - description: User Auth0 ID
        in: path
        name: id
        required: true
        type: string
      - description: User metadata to update
        in: body
        name: userMetaData
        required: true
        schema:
          $ref: '#/definitions/placio-app_models.Metadata'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated user metadata
          schema:
            $ref: '#/definitions/placio-app_models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Update a user's metadata
      tags:
      - User
  /api/v1/users/{id}/userinfo:
    patch:
      consumes:
      - application/json
      description: Update a user's information by their Auth0 ID
      parameters:
      - description: User Auth0 ID
        in: path
        name: id
        required: true
        type: string
      - description: User data to update
        in: body
        name: userData
        required: true
        schema:
          $ref: '#/definitions/placio-app_models.Auth0UserData'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated user information
          schema:
            $ref: '#/definitions/placio-app_ent.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Update a user's information
      tags:
      - User
  /api/v1/users/{userID}/business-account/{businessAccountID}/association:
    delete:
      consumes:
      - application/json
      description: Remove a user's association with a specific business account
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: integer
      - description: Business Account ID
        in: path
        name: businessAccountID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Successfully removed user's association with business account
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Remove a user's association with a business account
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Associate a user with a specific business account
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: integer
      - description: Business Account ID
        in: path
        name: businessAccountID
        required: true
        type: integer
      - description: Role
        in: body
        name: role
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "204":
          description: Successfully associated user with business account
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Associate a user with a business account
      tags:
      - User
  /api/v1/users/{userID}/business-account/{businessAccountID}/can-perform-action:
    post:
      consumes:
      - application/json
      description: Check if a user can perform a certain action based on their role
        in the business account
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: integer
      - description: Business Account ID
        in: path
        name: businessAccountID
        required: true
        type: integer
      - description: Action
        in: body
        name: action
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully checked permission
          schema:
            $ref: '#/definitions/placio-app_Dto.PermissionDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Check if a user can perform an action
      tags:
      - User
  /api/v1/users/{userID}/business-accounts:
    get:
      consumes:
      - application/json
      description: Get all business accounts a user is associated with
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved business accounts
          schema:
            items:
              $ref: '#/definitions/placio-app_ent.Business'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Get all business accounts a user is associated with
      tags:
      - User
  /api/v1/users/{userID}/followed-contents:
    get:
      consumes:
      - application/json
      description: Get posts of users and businesses followed by the user
      parameters:
      - description: ID of the user
        in: path
        name: userID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved posts
          schema:
            items:
              $ref: '#/definitions/placio-app_ent.Post'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Get followed contents
      tags:
      - User
  /api/v1/users/{userID}/posts:
    get:
      consumes:
      - application/json
      description: Get posts by the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved posts
          schema:
            items:
              $ref: '#/definitions/placio-app_Dto.PostResponseDto'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Retrieve posts by user
      tags:
      - User
  /api/v1/users/business-account:
    post:
      consumes:
      - application/json
      description: Create a new business account for the authenticated user
      parameters:
      - description: Business Account Name
        in: body
        name: name
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created business account
          schema:
            $ref: '#/definitions/placio-app_ent.Business'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Create a new business account
      tags:
      - User
  /api/v1/users/business-account/{businessAccountID}/users:
    get:
      consumes:
      - application/json
      description: Get all users associated with a specific business account
      parameters:
      - description: Business Account ID
        in: path
        name: businessAccountID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved users
          schema:
            items:
              $ref: '#/definitions/placio-app_ent.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Get all users for a business account
      tags:
      - User
  /business/:
    get:
      operationId: list-business-accounts
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/placio-app_Dto.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDto'
      summary: List all business accounts
      tags:
      - Business
    post:
      consumes:
      - application/json
      operationId: create-business-account
      parameters:
      - description: Business Account Data
        in: body
        name: Dto.BusinessDto
        required: true
        schema:
          $ref: '#/definitions/placio-app_Dto.BusinessDto'
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/placio-app_Dto.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDto'
      summary: Create a business account
      tags:
      - Business
  /business/{businessAccountID}:
    delete:
      operationId: delete-business-account
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Business Account ID
        in: path
        name: businessAccountID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/placio-app_Dto.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDto'
      summary: Delete a business account
      tags:
      - Business
    get:
      operationId: get-business-account
      parameters:
      - description: Business Account ID
        in: path
        name: businessAccountID
        required: true
        type: string
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/placio-app_Dto.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDto'
      summary: Get a business account
      tags:
      - Business
  /business/{businessAccountID}/associated:
    get:
      consumes:
      - application/json
      description: Retrieve All Places and Events associated with a Business Account
      operationId: get-places-and-events-associated-with-business-account
      parameters:
      - description: Business Account ID
        in: path
        name: businessAccountID
        required: true
        type: string
      - description: All
        in: query
        name: All
        type: boolean
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/placio-app_Dto.BusinessAccountPlacesAndEvents'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
      summary: Get Places and Events associated with a Business Account
      tags:
      - Business
  /business/{businessAccountID}/event:
    post:
      consumes:
      - application/json
      description: Add a new Event to a Business Account
      operationId: add-a-new-event-to-business-account
      parameters:
      - description: Business Account ID
        in: path
        name: businessAccountID
        required: true
        type: string
      - description: Event DTO
        in: body
        name: Dto.EventDTO
        required: true
        schema:
          $ref: '#/definitions/placio-app_Dto.EventDTO'
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/placio-app_ent.Event'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
      summary: Add a new Event to a Business Account
      tags:
      - Business
  /business/{businessAccountID}/team-members:
    get:
      consumes:
      - application/json
      operationId: list-team-members
      parameters:
      - description: Business Account ID
        in: path
        name: businessAccountID
        required: true
        type: string
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/placio-app_Dto.TeamMember'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
      summary: List all team members of a Business Account
      tags:
      - Business
  /business/{businessAccountID}/team-members/{userID}:
    delete:
      consumes:
      - application/json
      operationId: remove-team-member
      parameters:
      - description: Business Account ID
        in: path
        name: businessAccountID
        required: true
        type: string
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/placio-app_Dto.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
      summary: Remove a team member from a Business Account
      tags:
      - Business
    patch:
      consumes:
      - application/json
      operationId: edit-team-member
      parameters:
      - description: Business Account ID
        in: path
        name: businessAccountID
        required: true
        type: string
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      - description: Role
        in: body
        name: role
        required: true
        schema:
          type: string
      - description: Permissions
        in: body
        name: permissions
        required: true
        schema:
          type: string
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/placio-app_Dto.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
      summary: Edit a team member in a Business Account
      tags:
      - Business
    post:
      consumes:
      - application/json
      operationId: add-team-member
      parameters:
      - description: Business Account ID
        in: path
        name: businessAccountID
        required: true
        type: string
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      - description: Role
        in: body
        name: role
        required: true
        schema:
          type: string
      - description: Permissions
        in: body
        name: permissions
        required: true
        schema:
          type: string
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/placio-app_Dto.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
      summary: Add a team member to a Business Account
      tags:
      - Business
  /business/{businessAccountID}/team-members/search:
    get:
      consumes:
      - application/json
      operationId: search-team-members
      parameters:
      - description: Business Account ID
        in: path
        name: businessAccountID
        required: true
        type: string
      - description: Search Text
        in: query
        name: searchText
        required: true
        type: string
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/placio-app_Dto.TeamMember'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
      summary: Search team members in a Business Account
      tags:
      - Business
  /business/{businessAccountID}/user/{currentOwnerID}/{newOwnerID}:
    put:
      operationId: transfer-business-account-ownership
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Business Account ID
        in: path
        name: businessAccountID
        required: true
        type: string
      - description: Current Owner ID
        in: path
        name: currentOwnerID
        required: true
        type: string
      - description: New Owner ID
        in: path
        name: newOwnerID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/placio-app_Dto.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDto'
      summary: Transfer business account ownership
      tags:
      - Business
  /business/{businessAccountID}/user/{userID}:
    delete:
      operationId: remove-user-business-account
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Business Account ID
        in: path
        name: businessAccountID
        required: true
        type: string
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/placio-app_Dto.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDto'
      summary: Remove user from business account
      tags:
      - Business
    post:
      operationId: associate-user-business-account
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Business Account ID
        in: path
        name: businessAccountID
        required: true
        type: string
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/placio-app_Dto.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDto'
      summary: Associate user with business account
      tags:
      - Business
  /business/{businessAccountID}/users:
    get:
      operationId: get-users-business-account
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Business Account ID
        in: path
        name: businessAccountID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/placio-app_Dto.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDto'
      summary: Get users for a business account
      tags:
      - Business
  /business/{businessID}/follow/user/{userID}:
    post:
      consumes:
      - application/json
      description: Retrieve all comments for a given post
      operationId: follow-user
      parameters:
      - description: Business ID
        in: path
        name: businessID
        required: true
        type: string
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/placio-app_Dto.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDto'
      summary: Follow a user by a business
      tags:
      - Business
  /business/{businessID}/followed-contents:
    get:
      operationId: get-followed-contents
      parameters:
      - description: Business ID
        in: path
        name: businessID
        required: true
        type: string
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/placio-app_Dto.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDto'
      summary: Get contents followed by a business
      tags:
      - Business
  /business/{businessID}/unfollow/user/{userID}:
    delete:
      operationId: unfollow-user
      parameters:
      - description: Business ID
        in: path
        name: businessID
        required: true
        type: string
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/placio-app_Dto.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDto'
      summary: Unfollow a user by a business
      tags:
      - Business
  /business/{followerBusinessID}/follow/business/{followedID}:
    post:
      operationId: follow-business
      parameters:
      - description: Follower Business ID
        in: path
        name: followerBusinessID
        required: true
        type: string
      - description: Followed Business ID
        in: path
        name: followedBusinessID
        required: true
        type: string
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/placio-app_Dto.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDto'
      summary: Follow a business by another business
      tags:
      - Business
  /business/{followerBusinessID}/unfollow/business/{followedBusinessID}:
    delete:
      operationId: unfollow-business
      parameters:
      - description: Follower Business ID
        in: path
        name: followerBusinessID
        required: true
        type: string
      - description: Followed Business ID
        in: path
        name: followedBusinessID
        required: true
        type: string
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/placio-app_Dto.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDto'
      summary: Unfollow a business by another business
      tags:
      - Business
  /business/user-business-account:
    get:
      operationId: get-user-business-accounts
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/placio-app_Dto.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDto'
      summary: Get user business accounts
      tags:
      - Business
  /categories/:
    post:
      consumes:
      - application/json
      parameters:
      - description: Category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/placio-app_ent.Category'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/placio-app_ent.Category'
      summary: Create a new category
      tags:
      - categories
  /categories/{categoryID}/businesses:
    get:
      consumes:
      - application/json
      parameters:
      - description: Category ID
        in: path
        name: categoryID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/placio-app_ent.Business'
            type: array
      summary: Get businesses by category
      tags:
      - categories
  /categories/{categoryID}/businesses/{businessID}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Category ID
        in: path
        name: categoryID
        required: true
        type: string
      - description: Business ID
        in: path
        name: businessID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/placio-app_ent.CategoryAssignment'
      summary: Assign a business to a category
      tags:
      - categories
  /categories/{categoryID}/places:
    get:
      consumes:
      - application/json
      parameters:
      - description: Category ID
        in: path
        name: categoryID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/placio-app_ent.Place'
            type: array
      summary: Get places by category
      tags:
      - categories
  /categories/{categoryID}/places/{placeID}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Category ID
        in: path
        name: categoryID
        required: true
        type: string
      - description: Place ID
        in: path
        name: placeID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/placio-app_ent.CategoryAssignment'
      summary: Assign a place to a category
      tags:
      - categories
  /categories/{categoryID}/users:
    get:
      consumes:
      - application/json
      parameters:
      - description: Category ID
        in: path
        name: categoryID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/placio-app_ent.User'
            type: array
      summary: Get users by category
      tags:
      - categories
  /categories/{categoryID}/users/{userID}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Category ID
        in: path
        name: categoryID
        required: true
        type: string
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/placio-app_ent.CategoryAssignment'
      summary: Assign a user to a category
      tags:
      - categories
  /categories/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/placio-app_ent.Category'
      summary: Delete a category
      tags:
      - categories
    patch:
      consumes:
      - application/json
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      - description: Category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/placio-app_ent.Category'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/placio-app_ent.Category'
      summary: Update an existing category
      tags:
      - categories
  /categories/search:
    get:
      consumes:
      - application/json
      parameters:
      - description: Category name
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/placio-app_ent.Category'
            type: array
      summary: Search by category
      tags:
      - categories
  /events:
    get:
      consumes:
      - application/json
      description: Get Events
      parameters:
      - in: query
        items:
          type: string
        name: eventType
        type: array
      - in: query
        items:
          type: string
        name: ids
        type: array
      - in: query
        items:
          type: string
        name: location
        type: array
      - in: query
        items:
          type: string
        name: name
        type: array
      - in: query
        items:
          type: string
        name: status
        type: array
      - in: query
        items:
          type: string
        name: timeZone
        type: array
      - in: query
        items:
          type: string
        name: title
        type: array
      - in: query
        items:
          type: string
        name: url
        type: array
      - description: Page Number
        in: query
        name: page
        type: integer
      - description: Page Size
        in: query
        name: pageSize
        type: integer
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/placio-app_ent.Event'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Get all Events
      tags:
      - Event
    post:
      consumes:
      - application/json
      description: Create Event
      parameters:
      - description: Event Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/placio-app_Dto.EventDTO'
      - description: Business ID
        in: query
        name: businessId
        type: string
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/placio-app_ent.Event'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Create Event
      tags:
      - Event
  /events/{eventId}:
    delete:
      consumes:
      - application/json
      description: Delete an existing event
      parameters:
      - description: Event ID
        in: path
        name: eventId
        required: true
        type: string
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
      summary: Delete Event
      tags:
      - Event
    get:
      consumes:
      - application/json
      description: Get a single event by its ID
      parameters:
      - description: Event ID
        in: path
        name: eventId
        required: true
        type: string
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/placio-app_ent.Event'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
      summary: Get Event By ID
      tags:
      - Event
    put:
      consumes:
      - application/json
      description: Update Event
      parameters:
      - description: Event ID
        in: path
        name: eventId
        required: true
        type: string
      - description: Business ID
        in: query
        name: businessId
        type: string
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Event Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/placio-app_Dto.EventDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/placio-app_ent.Event'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Update Event
      tags:
      - Event
  /events/participants/{eventId}:
    get:
      consumes:
      - application/json
      description: Get Event Participants
      parameters:
      - description: Event ID
        in: path
        name: eventId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/placio-app_ent.Event'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Get Event Participants
      tags:
      - Event
  /faq/{faqID}:
    delete:
      consumes:
      - application/json
      description: Delete FAQ by ID
      operationId: delete-FAQ
      parameters:
      - description: FAQ ID
        in: path
        name: faqID
        required: true
        type: string
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: FAQ deleted successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
      summary: Delete FAQ by ID
      tags:
      - FAQ
    get:
      consumes:
      - application/json
      description: Retrieve FAQ by ID
      operationId: get-FAQ
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: FAQ ID
        in: path
        name: faqID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/placio-app_ent.FAQ'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
      summary: Get FAQ by ID
      tags:
      - FAQ
    patch:
      consumes:
      - application/json
      description: Update FAQ by ID
      operationId: update-FAQ
      parameters:
      - description: FAQ ID
        in: path
        name: faqID
        required: true
        type: string
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: FAQ Data
        in: body
        name: faqData
        required: true
        schema:
          $ref: '#/definitions/placio-app_Dto.FAQDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/placio-app_ent.FAQ'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
      summary: Update FAQ by ID
      tags:
      - FAQ
  /faq/{faqID}/event/{eventID}:
    post:
      consumes:
      - application/json
      description: Associate a FAQ with an Event by their IDs
      operationId: associate-FAQ-event
      parameters:
      - description: FAQ ID
        in: path
        name: faqID
        required: true
        type: string
      - description: Event ID
        in: path
        name: eventID
        required: true
        type: string
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: FAQ associated with event successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
      summary: Associate FAQ with Event
      tags:
      - FAQ
  /faq/{faqID}/place/{placeID}:
    post:
      consumes:
      - application/json
      description: Associate a FAQ with a Place by their IDs
      operationId: associate-FAQ-place
      parameters:
      - description: FAQ ID
        in: path
        name: faqID
        required: true
        type: string
      - description: Place ID
        in: path
        name: placeID
        required: true
        type: string
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: FAQ associated with place successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
      summary: Associate FAQ with Place
      tags:
      - FAQ
  /faq/business/{businessID}:
    get:
      consumes:
      - application/json
      description: Retrieve FAQs by Business ID
      operationId: get-FAQs-by-business
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Business ID
        in: path
        name: businessID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/placio-app_ent.FAQ'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
      summary: Get FAQs by Business ID
      tags:
      - FAQ
    post:
      consumes:
      - application/json
      description: Create a new FAQ for a specific Business
      operationId: create-faq
      parameters:
      - description: Business ID
        in: path
        name: businessID
        required: true
        type: string
      - description: FAQ Data
        in: body
        name: faqData
        required: true
        schema:
          $ref: '#/definitions/placio-app_Dto.FAQDto'
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/placio-app_Dto.FAQDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
      summary: Create a new FAQ
      tags:
      - FAQ
  /follow/business/{businessID}:
    post:
      consumes:
      - application/json
      description: Follow a specific Business by the user
      operationId: user-follow-business
      parameters:
      - description: Business ID
        in: path
        name: businessID
        required: true
        type: string
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: User successfully followed the business
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
      summary: Follow a business
      tags:
      - Follow
  /follow/event/{eventID}:
    post:
      consumes:
      - application/json
      description: Follow a specific Event by the user
      operationId: follow-event
      parameters:
      - description: Event ID
        in: path
        name: eventID
        required: true
        type: string
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: User successfully followed the event
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
      summary: Follow an event
      tags:
      - Follow
  /follow/place/{placeID}:
    post:
      consumes:
      - application/json
      description: Follow a specific Place by the user
      operationId: follow-place
      parameters:
      - description: Place ID
        in: path
        name: placeID
        required: true
        type: string
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: User successfully followed the place
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
      summary: Follow a place
      tags:
      - Follow
  /follow/user/{userID}:
    post:
      consumes:
      - application/json
      description: Follow a specific User
      operationId: user-follow-user
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: User successfully followed the user
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
      summary: Follow a user
      tags:
      - Follow
  /followed/businesses:
    get:
      consumes:
      - application/json
      description: Get all Businesses followed by the user
      operationId: get-followed-businesses
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/placio-app_ent.Business'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
      summary: Get followed businesses by a user
      tags:
      - Follow
  /followed/events:
    get:
      consumes:
      - application/json
      description: Get all Events followed by the user
      operationId: get-followed-events
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/placio-app_ent.Event'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
      summary: Get followed events by a user
      tags:
      - Follow
  /followed/places:
    get:
      consumes:
      - application/json
      description: Get all Places followed by the user
      operationId: get-followed-places
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/placio-app_ent.Place'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
      summary: Get followed places by a user
      tags:
      - Follow
  /followed/users:
    get:
      consumes:
      - application/json
      description: Get all Users followed by the user
      operationId: get-followed-users
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/placio-app_ent.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
      summary: Get followed users by a user
      tags:
      - Follow
  /places:
    get:
      consumes:
      - application/json
      description: Get Places by applying various filters (ID, Name, Type, Country,
        City, State, Tags, Features)
      parameters:
      - in: query
        items:
          type: string
        name: city
        type: array
      - in: query
        items:
          type: string
        name: country
        type: array
      - in: query
        items:
          type: string
        name: email
        type: array
      - in: query
        items:
          type: string
        name: features
        type: array
      - in: query
        items:
          type: string
        name: ids
        type: array
      - in: query
        items:
          type: string
        name: name
        type: array
      - in: query
        items:
          type: string
        name: phone
        type: array
      - in: query
        items:
          type: string
        name: state
        type: array
      - in: query
        items:
          type: string
        name: tags
        type: array
      - in: query
        items:
          type: string
        name: type
        type: array
      - in: query
        items:
          type: string
        name: website
        type: array
      - description: Page Number
        in: query
        name: page
        type: integer
      - description: Page Size
        in: query
        name: pageSize
        type: integer
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/placio-app_ent.Place'
            type: array
        "400":
          description: Invalid inputs
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "401":
          description: Unauthorized. Invalid or expired token
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Get all Places
      tags:
      - Place
  /reviews/:
    get:
      consumes:
      - application/json
      description: Get reviews based on query parameters
      produces:
      - application/json
      responses:
        "200":
          description: Array of Reviews
          schema:
            items:
              $ref: '#/definitions/placio-app_ent.Review'
            type: array
        "500":
          description: Error message
          schema:
            type: string
      summary: Get reviews by query
      tags:
      - Review
    post:
      consumes:
      - application/json
      description: Rate a place, event, or business
      parameters:
      - description: Item Type (place, event, business)
        in: query
        name: type
        required: true
        type: string
      - description: Item ID (placeID, eventID, businessID)
        in: query
        name: id
        required: true
        type: string
      - description: Rating Score
        in: body
        name: score
        required: true
        schema:
          type: number
      - description: Review Content
        in: body
        name: content
        required: true
        schema:
          type: string
      - description: JWT Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully rated [itemType]
          schema:
            type: string
        "400":
          description: Invalid item type
          schema:
            type: string
        "500":
          description: Error message
          schema:
            type: string
      summary: Review a Place, Event, or Business
      tags:
      - Review
  /reviews/{reviewID}:
    delete:
      consumes:
      - application/json
      description: Remove a review based on reviewID
      parameters:
      - description: Review ID
        in: path
        name: reviewID
        required: true
        type: string
      - description: JWT Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted review
          schema:
            type: string
        "500":
          description: Error message
          schema:
            type: string
      summary: Remove a review
      tags:
      - Review
    get:
      consumes:
      - application/json
      description: Retrieve a review using its ID
      parameters:
      - description: Review ID
        in: path
        name: reviewID
        required: true
        type: string
      - description: JWT Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Review data
          schema:
            $ref: '#/definitions/placio-app_ent.Review'
        "500":
          description: Error message
          schema:
            type: string
      summary: Get review by ID
      tags:
      - Review
    put:
      consumes:
      - application/json
      description: Update the content of a review based on reviewID
      parameters:
      - description: Review ID
        in: path
        name: reviewID
        required: true
        type: string
      - description: JWT Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: New Review Content
        in: body
        name: content
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated review
          schema:
            type: string
        "500":
          description: Error message
          schema:
            type: string
      summary: Update review content
      tags:
      - Review
  /reviews/{reviewID}/addMedia:
    post:
      consumes:
      - application/json
      description: Add media to a review based on reviewID
      parameters:
      - description: Review ID
        in: path
        name: reviewID
        required: true
        type: string
      - description: Media File
        in: body
        name: string
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully added media to review
          schema:
            type: string
        "500":
          description: Error message
          schema:
            type: string
      summary: Add media to a review
      tags:
      - Review
  /reviews/{reviewID}/dislike:
    post:
      consumes:
      - application/json
      description: Dislike a review based on reviewID
      parameters:
      - description: Review ID
        in: path
        name: reviewID
        required: true
        type: string
      - description: JWT Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully disliked review
          schema:
            type: string
        "500":
          description: Error message
          schema:
            type: string
      summary: Dislike a review
      tags:
      - Review
  /reviews/{reviewID}/like:
    post:
      consumes:
      - application/json
      description: Like a review based on reviewID
      parameters:
      - description: Review ID
        in: path
        name: reviewID
        required: true
        type: string
      - description: JWT Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully liked review
          schema:
            type: string
        "500":
          description: Error message
          schema:
            type: string
      summary: Like a review
      tags:
      - Review
  /unfollow/business/{businessID}:
    delete:
      consumes:
      - application/json
      description: Unfollow a specific Business by the user
      operationId: user-unfollow-business
      parameters:
      - description: Business ID
        in: path
        name: businessID
        required: true
        type: string
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User successfully unfollowed the business
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
      summary: Unfollow a business
      tags:
      - Follow
  /unfollow/event/{eventID}:
    delete:
      consumes:
      - application/json
      description: Unfollow a specific Event by the user
      operationId: unfollow-event
      parameters:
      - description: Event ID
        in: path
        name: eventID
        required: true
        type: string
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User successfully unfollowed the event
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
      summary: Unfollow an event
      tags:
      - Follow
  /unfollow/place/{placeID}:
    delete:
      consumes:
      - application/json
      description: Unfollow a specific Place by the user
      operationId: unfollow-place
      parameters:
      - description: Place ID
        in: path
        name: placeID
        required: true
        type: string
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User successfully unfollowed the place
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
      summary: Unfollow a place
      tags:
      - Follow
  /unfollow/user/{userID}:
    delete:
      consumes:
      - application/json
      description: Unfollow a specific User
      operationId: user-unfollow-user
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User successfully unfollowed the user
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.Error'
      summary: Unfollow a user
      tags:
      - Follow
schemes:
- http
- https
swagger: "2.0"
